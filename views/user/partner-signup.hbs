<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up / Login</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
      body {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Arial', sans-serif;
    position: relative; /* Allows header positioning */
}

header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 60px; /* Set header height */
    background: white;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Added box shadow */
    display: flex;
    align-items: center;
    padding-left: 20px; /* Added padding for logo alignment */
}

header img {
    width: 100px; /* Adjust the logo size */
    height: auto;
}

.signup-container {
    position: relative;
    padding: 1.5rem; /* Reduced padding */
    border-radius: 10px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
    overflow: hidden;
    max-width: 400px; /* Reduced max width */
    width: 100%;
    background: white;
    margin-top: 100px !important; /* Adjusted for header height */
}

.signup-form h2 {
    text-align: center;
    margin-bottom: 15px; /* Reduced margin */
    font-weight: 900;
    color: #000000;
    text-transform: uppercase;
    letter-spacing: 1.5px;
    background: #232f65;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.form-control {
    border-radius: 10px; /* Reduced border-radius */
    padding: 0.5rem; /* Reduced padding */
    font-size: 0.9rem; /* Reduced font size */
    transition: all 0.4s ease;
    background: rgba(255, 255, 255, 0.1);
    color: rgb(0, 0, 0);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.form-control:focus {
    border-color: #4facfe;
    box-shadow: 0 0 10px rgba(79, 172, 254, 0.5);
    background: rgba(255, 255, 255, 0.2);
    color: #000;
}

.btn-signup {
    background: linear-gradient(135deg, #4facfe, #232f65);
    color: white;
    border-radius: 20px; /* Reduced border-radius */
    padding: 0.5rem 1rem; /* Reduced padding */
    font-size: 1rem; /* Reduced font size */
    font-weight: bold;
    transition: all 0.4s ease;
    text-transform: uppercase;
}

.btn-signup:hover {
    background: linear-gradient(135deg, #00f2fe, #232f65);
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
}

.btn-signup:active {
    transform: translateY(1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
}

.nav-tabs {
    border-bottom: none;
    justify-content: center;
    margin-bottom: 15px; /* Reduced margin */
}

.nav-tabs .nav-link {
    border: none;
    background: none;
    color: #000;
    font-weight: bold;
    text-transform: uppercase;
    transition: all 0.3s ease;
    margin-right: 10px;
}

.nav-tabs .nav-link.active {
    color: #4facfe;
    border-bottom: 2px solid #4facfe;
}

.error-message {
    color: red;
    font-size: 0.875em;
    margin-top: 0.25em;
}

/* Media query for mobile screens */
@media (max-width: 600px) {
    .signup-container {
        max-width: 90%; /* Reduced width for mobile */
      
    }

    .signup-form h2 {
        font-size: 1.2rem; /* Slightly smaller font size for mobile */
    }

    .form-control {
        padding: 0.4rem; /* Slightly reduced padding */
        font-size: 0.85rem; /* Slightly smaller font size */
    }

    .btn-signup {
        padding: 0.4rem 0.8rem; /* Reduced padding */
        font-size: 0.9rem; /* Slightly smaller font size */
    }
}
.btn-sm{
    font-size: 8px;
    margin-top: 7px;
    margin-right: 25px;
}
.text-danger{
    font-size: 12px !important;
    color: red;
}
.text-primary{
    font-size: 12px !important;
}
    </style>
</head>
<body>
    <header>
        <img src="/images/ieh-logo.png" alt="Indian Edu Hub Logo">
    </header>
    <div class="signup-container mt-5">
        <ul class="nav nav-tabs" id="signupSigninTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="signup-tab" data-toggle="tab" href="#signup" role="tab" aria-controls="signup" aria-selected="true">Sign Up</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="signin-tab" data-toggle="tab" href="#signin" role="tab" aria-controls="signin" aria-selected="false">Sign In</a>
            </li>
        </ul>
        <div class="tab-content" id="signupSigninContent">
            <!-- Sign Up Form -->
      <div class="tab-pane fade show active" id="signup" role="tabpanel" aria-labelledby="signup-tab">
    <form id="signupForm" class="signup-form">
        <!-- Row 1: Institute Name and Owner Name -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="institute_name" placeholder="Institute Name" required>
                <div id="institute_name_error" class="error-message"></div>
            </div>
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="owner_name" placeholder="Owner Name" required>
                <div id="owner_name_error" class="error-message"></div>
            </div>
        </div>

        <!-- Row 2: Company Type and Established Date -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <select class="form-control" id="company_type" required>
                    <option value="">Select Type of Company</option>
                    <option value="Pvt Ltd">Pvt Ltd</option>
                    <option value="LLP">LLP</option>
                    <option value="Partnership">Partnership</option>
                    <option value="Others">Others</option>
                </select>
                <div id="company_type_error" class="error-message"></div>
            </div>
       <div class="col-md-6 col-6 form-group">
    <select class="form-control bg-white" id="established_year" required>
        <option value="">Select Established Year</option>
        <script>
            const currentYear = new Date().getFullYear();
            const startYear = currentYear - 100; // Adjust the range as needed
            for (let year = currentYear; year >= startYear; year--) {
                document.write(`<option value="${year}">${year}</option>`);
            }
        </script>
    </select>
    <div id="established_date_error" class="error-message"></div>
</div>


        </div>

        <!-- Row 3: Institute Provides, State, and City -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <select id="stateSelect" name="State" class="form-control" required>
                    <option value="" disabled selected hidden>Select State*</option>
                    <!-- Options for states will go here -->
                </select>
                <small id="stateError" class="text-danger"></small>
            </div>
            <div class="col-md-6 col-6 form-group">
                <select id="citySelect" name="City" class="form-control" required>
                    <option value="" disabled selected hidden>Select City*</option>
                    <!-- Options for cities will go here -->
                </select>
                <small id="cityError" class="text-danger"></small>
            </div>
        </div>

        <!-- Row 4: Email and Mobile Number -->
        <div class="row">
            <div class="col-md-12 col-12 form-group">
                <input type="text" class="form-control" id="mobile_number" placeholder="Mobile Number" required>
                <div id="mobile_number_error" class="error-message"></div>
            </div>
            <div class="col-md-12 col-12 form-group position-relative">
                <input type="email" class="form-control" id="emailOtpField" placeholder="Email" required>
                <button type="button" id="sendOtpBtn" class="btn-sm btn-secondary position-absolute" style="right: 0; top: 0;">
                    <span id="sendOtpText">Send OTP</span>
                    <span id="sendOtpSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                </button>
                <div id="email_error" class="error-message"></div>
                   <button type="button" id="verifyOtpBtn" class="btn-sm btn-success d-none position-absolute" style="right: 0; top: 0;">Verify OTP</button>
                <div id="email_error" class="error-message"></div>
            </div>
        </div>

        <!-- Row 5: Password and Institute Provides -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="institute_provides" placeholder="Institute Provides" required>
                <div id="institute_provides_error" class="error-message"></div>
            </div>
            <div class="col-md-6 col-6 form-group">
                <input type="password" class="form-control" id="password" placeholder="Create Password" required>
                <div id="password_error" class="error-message"></div>
            </div>
        </div>

        <!-- Row 6: Account Holder Name and Account Number -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="account_holder_name" placeholder="Account Holder Name" required>
                <div id="account_holder_name_error" class="error-message"></div>
            </div>
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="account_number" placeholder="Account Number" required>
                <div id="account_number_error" class="error-message"></div>
            </div>
        </div>

        <!-- Row 7: IFSC Code and Branch -->
        <div class="row">
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="ifsc_code" placeholder="IFSC Code" required>
                <div id="ifsc_code_error" class="error-message"></div>
            </div>
            <div class="col-md-6 col-6 form-group">
                <input type="text" class="form-control" id="branch" placeholder="Branch" required>
                <div id="branch_error" class="error-message"></div>
            </div>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-signup btn-block">Sign Up</button>
    </form>
       <div class="text-center">
    <a  href="https://crm.indianeduhub.in/partner-signup#signin"  class="text-primary mt-3">Already have account?</a>
</div>
</div>
          <!-- Sign In Form -->
<div class="tab-pane fade" id="signin" role="tabpanel" aria-labelledby="signin-tab">
    <form id="signinForm" class="signup-form">
        <div class="form-group">
            <input type="email" class="form-control" id="signin_email" placeholder="Email" required>
        </div>
        <div class="form-group">
            <input type="password" class="form-control" id="signin_password" placeholder="Password" required>
        </div>
        <button type="submit" class="btn btn-signup btn-block">Sign In</button>
    </form>
          <div class="text-center">
    <a href="/find-partner" class="text-danger mt-3">Forgot Password?</a>
</div>
</div>



        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/alertifyjs/build/alertify.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/alertify.min.css"/>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/themes/default.min.css"/>
<script>
    document.getElementById('signinForm').addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default form submission

        const formData = {
            email: document.getElementById('signin_email').value,
            password: document.getElementById('signin_password').value,
        };

        try {
            const response = await fetch('/partner-signin', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
                alertify.success('Sign in successful!');
                
                // Redirect to the partner dashboard
                window.location.href = "/partner-dashboard";
            } else {
                alertify.error(result.message); // Display error message using alertify
            }
        } catch (error) {
            console.error('Error signing in:', error);
            alertify.error('An error occurred while signing in.');
        }
    });
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    let isOtpVerified = false; // Flag to track OTP verification status
    let verifiedEmail = ''; // Store the email once OTP is verified

    const sendOtpBtn = document.getElementById('sendOtpBtn');
    const sendOtpText = document.getElementById('sendOtpText');
    const sendOtpSpinner = document.getElementById('sendOtpSpinner');
    const emailOtpField = document.getElementById('emailOtpField');

    if (sendOtpBtn && emailOtpField) {
        sendOtpBtn.addEventListener('click', async function() {
            const email = emailOtpField.value.trim();

            if (email === '') {
                document.getElementById('email_error').textContent = 'Email is required.';
                return;
            }

            // Show loading spinner and disable the button
            sendOtpText.classList.add('d-none');
            sendOtpSpinner.classList.remove('d-none');
            sendOtpBtn.disabled = true;

            try {
                const response = await fetch('/send-otppartner', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email })
                });

                const result = await response.json();

                if (result.success) {
                    alertify.success('OTP sent successfully to your email.');
                    emailOtpField.value = '';
                    emailOtpField.placeholder = 'Enter OTP';
                    emailOtpField.type = 'text';
                    verifiedEmail = email; // Store the email for later use
                } else {
                    alertify.error(result.message);
                }
            } catch (error) {
                console.error('Error sending OTP:', error);
                alertify.error('An error occurred while sending OTP.');
            } finally {
                // Hide loading spinner and enable the button
                sendOtpText.classList.remove('d-none');
                sendOtpSpinner.classList.add('d-none');
                sendOtpBtn.disabled = false;
            }
        });
    }

    const signupForm = document.getElementById('signupForm');
    if (signupForm) {
        signupForm.addEventListener('submit', async function(event) {
            event.preventDefault();

            // Clear previous error messages
            const errorFields = document.querySelectorAll('.error-message');
            errorFields.forEach(field => field.textContent = '');

            const email = emailOtpField.value.trim();
            const otp = emailOtpField.value.trim();

            // Verify OTP before submission
            if (!isOtpVerified) {
                if (otp === '') {
                    document.getElementById('email_error').textContent = 'OTP is required.';
                    return;
                }

                try {
                    const response = await fetch('/verify-otp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ otp: otp, email: verifiedEmail })
                    });

                    const result = await response.json();

                    if (result.success) {
                        alertify.success('OTP verified successfully.');
                        emailOtpField.placeholder = 'OTP Verified';
                        emailOtpField.disabled = true;
                        isOtpVerified = true; // Set the flag correctly
                    } else {
                        document.getElementById('email_error').textContent = result.message;
                        alertify.error(result.message);
                        return; // Stop form submission if OTP is not verified
                    }
                } catch (error) {
                    console.error('Error verifying OTP:', error);
                    alertify.error('An error occurred while verifying OTP.');
                    return; // Stop form submission if an error occurs
                }
            }

            // Proceed with form submission if OTP is verified
            const formData = {
                // Gather all form data
             institute_name: document.getElementById('institute_name').value.trim(),
    owner_name: document.getElementById('owner_name').value.trim(),
    company_type: document.getElementById('company_type').value.trim(),
    established_year: document.getElementById('established_year').value.trim(), // Updated
    institute_provides: document.getElementById('institute_provides').value.trim(),
    state: document.getElementById('stateSelect').value.trim(),
    city: document.getElementById('citySelect').value.trim(),
    email: verifiedEmail,
    password: document.getElementById('password').value.trim(),
    account_holder_name: document.getElementById('account_holder_name').value.trim(),
    account_number: document.getElementById('account_number').value.trim(),
    ifsc_code: document.getElementById('ifsc_code').value.trim(),
    branch: document.getElementById('branch').value.trim(),
    mobile_number: document.getElementById('mobile_number').value.trim()
            };

            try {
                const response = await fetch('/partner-creation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();

                if (response.ok) {
                    if (result.success) {
                        alertify.success('Signup successful!');
                        const signinTab = new bootstrap.Tab(document.getElementById('signin-tab'));
                        signinTab.show();
                    } else {
                        alertify.error(result.message);
                    }
                } else {
                    alertify.error('An error occurred: ' + result.message);
                }
            } catch (error) {
                console.error('Error submitting the form:', error);
                alertify.error('An error occurred while submitting the form.');
            }
        });
    }


  // Script for Established Date placeholder logic
  const displayInput = document.getElementById('established_date_display');
  const dateInput = document.getElementById('established_date');

  displayInput?.addEventListener('focus', function () {
    dateInput.classList.remove('d-none');
    dateInput.focus();
    displayInput.classList.add('d-none');
  });

  dateInput?.addEventListener('blur', function () {
    if (dateInput.value === '') {
      dateInput.classList.add('d-none');
      displayInput.classList.remove('d-none');
    }
  });

  dateInput?.addEventListener('change', function () {
    displayInput.value = dateInput.value;
    dateInput.classList.add('d-none');
    displayInput.classList.remove('d-none');
  });
});
</script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Get the current URL hash
        const hash = window.location.hash;

        // If the hash exists and matches a tab, trigger the tab change
        if (hash) {
            const tabLink = document.querySelector(`a[href="${hash}"]`);
            if (tabLink) {
                // Deactivate current active tabs
                document.querySelectorAll('.nav-link.active').forEach((tab) => {
                    tab.classList.remove('active');
                });
                document.querySelectorAll('.tab-pane.active').forEach((tabContent) => {
                    tabContent.classList.remove('active', 'show');
                });

                // Activate the clicked tab and corresponding content
                tabLink.classList.add('active');
                const tabContent = document.querySelector(hash);
                tabContent.classList.add('active', 'show');
            }
        }

        // Handle tab switching manually by overriding the default behavior of links
        const tabs = document.querySelectorAll('.nav-link');
        tabs.forEach(tab => {
            tab.addEventListener('click', function (e) {
                const target = this.getAttribute('href');
                if (target) {
                    // Update the URL without reloading the page
                    history.pushState(null, null, target);
                }
            });
        });
    });
</script>

<script src="../javascripts/statesandcities.js"></script>
    <!-- Bootstrap JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
