<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Team Player Dashboard</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
    <style>
          body {
            font-family: 'Montserrat', sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            padding: 0;
            font-size: 14px; /* Smaller font size for overall content */
        }

 
    .image-stack {
  position: relative;
  display: flex;
}

.profile-img {
  border-radius: 50%;
  position: relative;
  z-index: 1;
  margin-left: -20px; /* Adjust based on the desired overlap */
  transition: transform 0.3s, z-index 0.3s;
}

.profile-img:hover {
  transform: translateX(-20px); /* Adjust based on the desired hover effect */
  z-index: 10;
}

.image-stack .bg-success {
  position: absolute;
  bottom: 0;
  right: 0;
  border-radius: 50%;
  border: 2px solid white;
  padding: 1px;
}
.close {
    font-size: 1.5rem; /* Increase font size for better visibility */
    color: #fff; /* White color for the close icon */
    opacity: 0.8; /* Slight transparency */
    border: none; /* Remove border */
    background: none; /* Remove background */
    padding: 0; /* Remove default padding */
    cursor: pointer; /* Pointer cursor on hover */
    transition: color 0.3s, opacity 0.3s; /* Smooth transition for hover effects */
}

.close:hover {
    color: #ff4d4d; /* Change color on hover */
    opacity: 1; /* Full opacity on hover */
}
    .dropdown-card {
      cursor: pointer;
    }
.form-label {
    font-size: 0.875rem; /* Smaller font size for labels */
  }

  .form-control {
    font-size: 0.875rem; /* Smaller font size for input fields */
    padding: 0.375rem 0.75rem; /* Reduced padding */
  }

  .btn {
    font-size: 0.75rem; /* Smaller font size for buttons */
    padding: 0.25rem 0.5rem; /* Reduced padding */
  }

  .dropdown-card {
    padding: 0.75rem; /* Reduced padding inside the card */
  }

  .dropdown-card i {
    font-size: 1.5rem; /* Smaller icon size */
  }

  .dropdown-card .ms-3 {
    font-size: 0.875rem; /* Smaller font size for text inside the card */
  }

  .bg-light {
    padding: 0.5rem; /* Reduced padding */
    border-radius: 0.25rem; /* Smaller border-radius */
  }

  .mb-2, .mb-0, .mb-1 {
    margin-bottom: 0.25rem; /* Reduced bottom margin */
  }

  .small {
    font-size: 0.75rem; /* Smaller font size */
  }

  /* Media Queries for Mobile Screens */
  @media (max-width: 576px) {
    .dropdown-card {
      padding: 0.5rem; /* Further reduced padding for mobile */
    }

  

    .dropdown-card .ms-3 p,
    .dropdown-card .ms-3 h6 {
      font-size: 0.75rem; /* Even smaller font size for text inside the card */
    }


    .form-control {
      font-size: 0.75rem; /* Even smaller font size for input fields on mobile */
    }

    .form-label {
      font-size: 0.75rem; /* Even smaller font size for labels on mobile */
    }
  }
  .btn-sm{
    background-color: rgba(0, 0, 182, 0.68) !important;
    color: white !important;
    border-radius: 5px !important;
  }

  .btn-secondary{
    background-color:#333;
  }
   /* General modal styling */
.modal-content {
  background-color: #f4f4f9; /* Soft light gray background */
  color: #333; /* Dark gray text for better readability */
  font-size: 10px; /* Small font size as per request */
  border-radius: 8px; /* Subtle rounded corners */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
}

.custom-header {
  background-color: #6c757d; /* Cool gray header */
  border-bottom: 2px solid #ccc; /* Light border to separate header */
  color: #fff; /* White text in header */
}

.custom-footer {
  background-color: #6c757d; /* Same gray for footer */
  border-top: 2px solid #ccc; /* Light border for separation */
  color: #fff;
}

/* Table styling */
.custom-table-container {
  max-height: 600px; /* Smaller height for scrollable content */
  overflow-y: auto; /* Enable vertical scrolling */
  overflow-x: auto; /* Enable horizontal scrolling */
}

.custom-table {
  width: 100%; /* Full width table */
  border-collapse: collapse;
}

.custom-table th, 
.custom-table td {
  border: 1px solid #ddd; /* Light borders for a clean look */
  text-align: left; /* Left align text for a clean layout */
  padding: 5px; /* Small padding to complement small font size */
  font-size: 10px; /* Font size reduced to 10px */
}

.custom-table th {
  background-color: #e9ecef; /* Light gray background for table headers */
  color: #495057; /* Darker text for table headers */
}

.custom-table td {
  background-color: #fff; /* White background for table cells */
  color: #495057; /* Darker text for readability */
}

.modal-md {
  max-width: 500px; /* Small width for the modal */
}

/* Ensure the modal body is scrollable */
.modal-body {
  max-height: calc(100vh - 160px); /* Adjust the value based on the height of the header and footer */
  overflow-y: auto; /* Enable vertical scrolling */
  padding: 10px; /* Reduce padding for a more compact look */
}

/* Adjust the modal height and width */
.modal-dialog {
  height: auto; /* Allow height to adjust based on content */
}

.modal-footer {
  position: sticky; /* Make sure the footer stays at the bottom */
  bottom: 0;
  background-color: #6c757d; /* Same gray for footer */
  border-top: 2px solid #ccc; /* Light border for separation */
  color: #fff;
  padding: 10px;
  z-index: 1; /* Ensure it stays above other content */
}

/* Ensure modal width is responsive */
.modal-md {
  width: 70%;
  max-width: 70%;
}

@media (max-width: 768px) {
  .modal-md {
    width: 95% !important; /* On very small screens, modal takes 95% of screen width */
    max-width: 95% !important;
  }
}

.modal-header h5 {
  font-size: 12px; /* Slightly larger header text for visibility */
}

/* Close button styling */
.close {
  color: #fff; /* White close button */
}

.close:hover {
  color: #ffcc00; /* Soft yellow hover effect for close button */
}



  .filter-card {
      background: rgba(245, 245, 245, 0.2) !important;
      border-radius: 20px !important;
      backdrop-filter: blur(10px) !important;
      border: 1px solid rgba(245, 245, 245, 0.2) !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
  }
.black{
    color: black !important;
    background-color:#232f65 !important;
    border-radius: 20px;
}
  .floating-label-wrapper {
      position: relative !important;
      width: 100% !important;
  }

  .floating-label {
      position: absolute !important;
      top: -12px !important;
      left: 12px !important;
      background-color: rgba(245, 245, 245, 0.7) !important;
      padding: 0 5px !important;
      font-size: 12px !important;
      color: #555 !important;
  }

  .circular-input {
      border-radius: 50px !important;
      padding: 10px 20px !important;
      border: 2px solid #ccc !important;
      width: 100% !important;
  }

  .btn-glass {
      background: rgba(245, 245, 245, 0.2) !important;
      border-radius: 50px !important;
      border: 2px solid rgba(245, 245, 245, 0.5) !important;
      padding: 10px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
  }

  .circular-btn {
      width: 50px !important;
      height: 50px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      border-radius: 30% !important;
  }
  .circular-btn:hover {
color: #ffffff;

  }
  .btn-glass:hover {
   background-color: #0056b3 !important;
      border-color: rgba(245, 245, 245, 0.8) !important;
  }

  .glassmorphism {
      box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1) !important;
  }

  .input-group {
      display: flex !important;
      align-items: center !important; 
  }

.stat-card {
    height: 100px !important;
    width: 100% !important; /* Ensure the cards are responsive */
    max-width: 180px !important; /* Set the maximum width of each card */
    transition: transform 0.3s ease, box-shadow 0.3s ease !important;
    display: flex !important;
    align-items: center !important;
    justify-content: space-between !important;
    text-align: center !important;
    border-radius: 20px !important;
    margin: auto !important; /* Center the cards */
}

.stat-card:hover {
    transform: translateY(-10px);
    box-shadow: 0px 20px 30px rgba(0, 0, 0, 0.2) !important;
}



  .stat-card i {
      opacity: 0.9 !important;
      font-size: 25px;
  }

  .shadow-xl {
      box-shadow: 0px 15px 25px rgba(0, 0, 0, 0.3) !important;
  }

  /* Gradient Colors */
  .bg-gradient-primary {
      background: linear-gradient(45deg, #1e3c72, #2a5298) !important;
  }

  .bg-gradient-success {
      background: linear-gradient(45deg, #28a745, #218838) !important;
  }

  .bg-gradient-info {
      background: linear-gradient(45deg, #17a2b8, #138496) !important;
  }


.bg-gradient-white {
    color: black !important;
    background: linear-gradient(45deg, #ffffff, #f0f0f0) !important;
}

  .bg-gradient-warning {
      background: linear-gradient(45deg, #ffc107, #e0a800) !important;
  }

  .bg-gradient-danger {
      background: linear-gradient(45deg, #dc3545, #c82333) !important;
  }

  .bg-gradient-secondary {
      background: linear-gradient(45deg, #6c757d, #5a6268) !important;
  }

  .bg-gradient-dark {
      background: linear-gradient(45deg, #343a40, #23272b) !important;
  }
 /* Gradient Backgrounds */
  .bg-gradient-primarys {
      background: linear-gradient(45deg, #007bff, #6610f2) !important;
  }

  .neon-icon {
      filter: drop-shadow(0px 0px 10px rgba(255, 255, 255, 0.5)) !important;
  }

  .bg-gradient-neon {
      background: linear-gradient(45deg, #007bff, #0056b3) !important;
      color: white !important;
  }

  .back-to-top {
      position: fixed !important;
      bottom: 20px !important;
      right: 20px !important;
      z-index: 9999 !important;
  }
</style>
    
</head>

<body>
    <div class="container-xxl position-relative bg-white d-flex p-0" style="background-color: #232f65;">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->

  <!-- Sidebar Start -->
        <div class="sidebar pe-4 pb-3" style="background-color: #232f65;">
            <nav class="navbar " style="background-color: #232f65;">
                <a href="index.html" class="navbar-brand mx-4 mb-3">
                    <h3 class="text-primary"> <img src="/images/indian-hub-logo-vert-white-e1662813826792.png" alt="Indian Edu Hub Logo" class="log"></h3>
                </a>
                <div class="d-flex align-items-center ms-4 mb-4" style="background-color: #232f65;">
                      
                    <div class="ms-3" >
                        <h6 class="mb-0 text-white">Indianeduhub</h6>
                        <span style="color: rgb(209, 211, 212);">Lead owner</span>
                    </div>
                </div>
                <div class="navbar-nav w-100" style="background-color: #232f65;">
                    <a href="/crm-lead-owner-dashboard" class="nav-item nav-link text-dark active"><i class="fa fa-tachometer-alt me-2 text-dark"></i>Dashboard</a>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle text-white" data-bs-toggle="dropdown"><i class="fa fa-laptop me-2 text-dark"></i>Leads</a>
                        <div class="dropdown-menu bg-transparent border-0">
                            <a href="/crm-lead-owner-details" class="dropdown-item active">Spreadsheet Leads</a>
                            
                      
                    </div>
                  
                </div>
                 <div class="nav-item dropdown">
                        <a href="/affiliate-partner-signup" class="nav-link  text-white" class="nav-item nav-link text-dark active"><i class="fa fa-user text-dark me-2"></i>My Referral</a>
                       
                    </div>
            </nav>
        </div>
        <!-- Sidebar End -->

        <!-- Content Start -->
        <div class="content">
            <!-- Navbar Start -->
            <nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
                <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
                    <h2 class="text-primary mb-0"><img src="/img/ie.png" alt="Indian Edu Hub Logo" style="height: 30px;"></h2>
                </a>
                <a href="#" class="sidebar-toggler flex-shrink-0">
                    <i class="fa fa-bars"></i>
                </a>
                <form class="d-none d-md-flex ms-4">
                    <input class="form-control border-0" type="search" placeholder="Search">
                </form>
                <div class="navbar-nav align-items-center ms-auto">
                    
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fa fa-bell me-lg-2"></i>
                            <span class="d-none d-lg-inline-flex">Notificatin</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                            <a href="#" class="dropdown-item">
                                <h6 class="fw-normal mb-0">Profile updated</h6>
                                <small>15 minutes ago</small>
                            </a>
                       
                            <hr class="dropdown-divider">
                            <a href="#" class="dropdown-item text-center">See all notifications</a>
                        </div>
                    </div>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            <img class="rounded-circle me-lg-2" src="/images/anon.webp" alt="" style="width: 40px; height: 40px;">
                            <span class="d-none d-lg-inline-flex">{{userName}}</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                            <a href="#" class="dropdown-item">Log Out</a>
                        </div>
                    </div>
                </div>
            </nav>
            <!-- Navbar End -->



<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <!-- Unique Date Range Filter and Button -->
       <div class="col-6 col-md-6 d-flex">
             {{#if user}}
                <div class="filter-card glassmorphism p-4 shadow-lg d-flex">
                    <div class="floating-label-wrapper">
                        <label for="dateRange" class="floating-label">Date Range</label>
                        <input type="text" id="dateRange" class="form-control shadow-sm circular-input" placeholder="Select Date Range">
                    </div>
                    <div class="floating-label-wrapper ms-3">
                        <label for="presetDateRange" class="floating-label">Preset Date Range</label>
                        <select id="presetDateRange" class="form-select shadow-sm circular-input">
                            <option value="">Select Preset</option>
                            <option value="today">Today</option>
                            <option value="this-week">This Week</option>
                            <option value="last-month">Last Month</option>
                            <option value="last-year">Last Year</option>
                        </select>
                    </div>
                    <button class="btn btn-glass shadow-sm circular-btn ms-3" id="latestBtn">
                        <i class="bi bi-filter-circle"></i> 
                    </button>
                    
                </div>
            {{/if}}
            
        </div>
             <div class="col-6 col-md-6 d-flex">
      
               <button>Report</button>
               
             </div>
<div class="col-12 col-xl-12">
    <div style="width: 10%;">
        <button type="button" class="btn-sm btn-secondary icon-only-btn" id="backBtn">
            <i class="fa fa-arrow-left"></i> 
        </button>
    </div>
</div>

<style>
   .icon-only-btn {
    background-color: #343a40;
    color: #ffffff;
    padding: 8px;
    font-size: 14px;
    border-radius: 50%;
    border: 2px solid #28a745;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease-in-out;
    width: 40px;
    height: 40px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    overflow: hidden;
    position: relative;
}

.icon-only-btn i {
    transition: transform 0.2s ease-in-out;
}

.icon-only-btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 300%;
    height: 100%;
    background: linear-gradient(120deg, transparent, rgba(40, 167, 69, 0.5), transparent);
    transition: all 0.5s ease-in-out;
}

.icon-only-btn:hover::before {
    left: -50%;
}

.icon-only-btn:hover {
    background-color: #28a745;
    color: #ffffff;
    border-color: #343a40;
    transform: scale(1.1);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
}

.icon-only-btn:hover i {
    transform: translateX(-3px);
}

.icon-only-btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.5);
}

</style>
        <!-- Lead Statistics -->
        <div class="col-6 col-xl-3">
            <div class="stat-card bg-gradient-primary text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl">
                <i class="fa fa-chart-line fa-3x neon-icon"></i>
                <div class="ms-3">
                    <p class="mb-2 counts">Total Leads</p>
                    <h6 class="mb-0">{{totalLeads}}</h6>
                </div>
            </div>
        </div>
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
      <div class="modal-header custom-header">
        <h5 class="modal-title text-white" id="detailsModalLabel">Student Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="background-color: white !important;"></button>
      </div>
      <div class="modal-body">
        <div class="table-responsive custom-table-container">
          <table class="table custom-table">
            <thead>
              <tr>
                <th scope="col"><input type="checkbox" id="selectAllCheckbox"></th> <!-- Add "Select All" -->
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Mobile</th>
<th scope="col">WhatsApp</th>
                <th scope="col">Course</th>
                <th scope="col">Specialization</th>
                <th scope="col">Status</th>
              </tr>
            </thead>
            <tbody id="modalTableBody">
              <!-- Rows will be populated dynamically -->
            </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer custom-footer">
        <button type="button" class="btn btn-primary" id="redirectBtn">Get Details</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Main Stage Cards -->
{{#each mainStageCounts}}
    <div class="col-6 col-xl-3">
        <div 
            class="stat-card {{#if (eq mainStage 'Not Contacted')}}bg-warning{{else}}bg-gradient-neon{{/if}} text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl main-stage-card" 
            data-stage="{{mainStage}}" 
            data-documents='{{json this.documents}}'>
            
            <!-- Conditional Icon -->
            {{#if (eq mainStage 'Not Contacted')}}
                <i class="fa fa-phone-slash fa-3x text-dark"></i> <!-- Icon for Not Contacted -->
            {{else}}
                <i class="fa fa-briefcase fa-3x neon-icon"></i> <!-- Default Icon -->
            {{/if}}
            
            <div class="ms-3">
                <p class="mb-2 counts">{{mainStage}}</p>
                <h6 class="mb-0">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}

<!-- Stage Cards -->
{{#each stageCounts}}
    <div class="col-6 col-xl-3 stage-card d-none" 
         data-main-stage="{{mainStage}}" 
         data-stage="{{stage}}" 
         data-documents='{{json this.documents}}'>
        <div class="stat-card bg-gradient-info text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl">
            <i class="fa fa-layer-group fa-3x neon-icon"></i>
            <div class="ms-3">
                <p class="mb-2 counts">{{stage}}</p>
                <h6 class="mb-0">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}

<!-- Sub-Stage Cards -->
{{#each subStageCounts}}
    <div class="col-6 col-xl-3 sub-stage-card d-none" 
         data-stage="{{stage}}" 
         data-sub-stage="{{subStage}}" 
         data-documents='{{json this.documents}}'>
        <div class="stat-card bg-gradient-white text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl">
            <i class="fa fa-tags fa-3x neon-icon"></i>
            <div class="ms-3">
                <p class="mb-2 counts">{{subStage}}</p>
                <h6 class="mb-0 black">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}


<script>
document.addEventListener("DOMContentLoaded", function() {
    let selectedMainStage = null;
    let selectedStage = null;
    let documents = null;
    const backBtn = document.getElementById("backBtn");

    // Initialize Back Button
    backBtn.style.display = "none";

    function showBackButton() {
        backBtn.style.display = "block";
    }

    function hideBackButton() {
        backBtn.style.display = "none";
    }

    function resetView() {
        document.querySelectorAll(".main-stage-card, .stage-card, .sub-stage-card").forEach(function(card) {
            card.classList.add("d-none");
        });
        document.querySelectorAll(".main-stage-card").forEach(function(card) {
            card.classList.remove("d-none");
        });
        hideBackButton();
    }

    // Handle Back Button Click
    backBtn.addEventListener("click", function() {
        if (selectedStage) {
            // Go back from sub-stage view to stage view
            document.querySelectorAll(".sub-stage-card").forEach(function(card) {
                card.classList.add("d-none");
            });
            document.querySelectorAll(`.stage-card[data-main-stage="${selectedMainStage}"]`).forEach(function(card) {
                card.classList.remove("d-none");
            });
            selectedStage = null;
        } else if (selectedMainStage) {
            // Go back from stage view to main stage view
            document.querySelectorAll(".stage-card, .sub-stage-card").forEach(function(card) {
                card.classList.add("d-none");
            });
            document.querySelectorAll(".main-stage-card").forEach(function(card) {
                card.classList.remove("d-none");
            });
            selectedMainStage = null;
        } else {
            resetView();
        }
    });

    // Redirect to details page
    function redirectToDetailsPage(selectedDocs) {
        const queryParams = new URLSearchParams();
        selectedDocs.forEach(doc => {
            for (const [key, value] of Object.entries(doc)) {
                if (Array.isArray(value)) {
                    value.forEach(val => queryParams.append(key, val));
                } else {
                    queryParams.append(key, value);
                }
            }
        });
        window.open(`/crm-lead-owner-details?${queryParams.toString()}`, '_blank');
    }

    // Select All functionality
    const selectAllCheckbox = document.getElementById("selectAllCheckbox");
    selectAllCheckbox.addEventListener("change", function() {
        const checkboxes = document.querySelectorAll(".row-checkbox");
        checkboxes.forEach(checkbox => checkbox.checked = selectAllCheckbox.checked);
    });

    // Handle main stage card click
    document.querySelectorAll(".main-stage-card").forEach(function(mainStageCard) {
        mainStageCard.addEventListener("click", function() {
            selectedMainStage = this.dataset.stage;
            documents = JSON.parse(this.getAttribute('data-documents'));

            showBackButton();

            // Show the action modal
            new bootstrap.Modal(document.getElementById('actionModal')).show();

            document.getElementById("showCardsBtn").textContent = "Show Stages";

            document.getElementById("showCardsBtn").onclick = function() {
                // Show stage cards related to the selected main stage
                document.querySelectorAll(".stage-card, .sub-stage-card").forEach(function(card) {
                    card.classList.add("d-none");
                });
                document.querySelectorAll(`.stage-card[data-main-stage="${selectedMainStage}"]`).forEach(function(stageCard) {
                    stageCard.classList.remove("d-none");
                });
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
            };

            document.getElementById("showTableBtn").onclick = function() {
                // Display the table in the modal
                const modalTableBody = document.getElementById('modalTableBody');
                modalTableBody.innerHTML = ''; 
                documents.forEach(doc => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><input type="checkbox" class="row-checkbox" data-documents='${JSON.stringify(doc)}'></td>
                        <td>${doc.name}</td>
                        <td>${doc.email}</td>
                        <td>${doc.mobile}</td>
                         <td>${doc.whatsapp}</td>
                        <td>${doc.course}</td>
                        <td>${doc.specialization}</td>
                        <td>${doc.status}</td>
                    `;
                    modalTableBody.appendChild(row);
                });
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
                new bootstrap.Modal(document.getElementById('detailsModal')).show();

                // Attach redirect on button click
                document.getElementById("redirectBtn").onclick = function() {
                    const selectedDocs = Array.from(document.querySelectorAll(".row-checkbox:checked"))
                        .map(checkbox => JSON.parse(checkbox.getAttribute('data-documents')));

                    if (selectedDocs.length === 0) {
                        alert("Please select at least one row before proceeding.");
                        return;
                    }

                    redirectToDetailsPage(selectedDocs);
                };
            };
        });
    });

    // Handle stage card click
    document.querySelectorAll(".stage-card").forEach(function(stageCard) {
        stageCard.addEventListener("click", function() {
            selectedStage = this.dataset.stage;
            documents = JSON.parse(this.getAttribute('data-documents'));

            showBackButton();

            // Show sub-stage cards related to the selected stage
            document.querySelectorAll(".sub-stage-card").forEach(function(card) {
                card.classList.add("d-none");
            });
            document.querySelectorAll(`.sub-stage-card[data-stage="${selectedStage}"]`).forEach(function(subStageCard) {
                subStageCard.classList.remove("d-none");
            });
            bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
        });
    });

    // Handle sub-stage card click
    document.querySelectorAll(".sub-stage-card").forEach(function(subStageCard) {
        subStageCard.addEventListener("click", function() {
            documents = JSON.parse(this.getAttribute('data-documents'));

            showBackButton();

            const modalTableBody = document.getElementById('modalTableBody');
            modalTableBody.innerHTML = ''; 
            documents.forEach(doc => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><input type="checkbox" class="row-checkbox" data-documents='${JSON.stringify(doc)}'></td>
                    <td>${doc.name}</td>
                    <td>${doc.email}</td>
                    <td>${doc.mobile}</td>
                      <td>${doc.whatsapp}</td>
                    <td>${doc.course}</td>
                    <td>${doc.specialization}</td>
                    <td>${doc.status}</td>
                `;
                modalTableBody.appendChild(row);
            });

            new bootstrap.Modal(document.getElementById('detailsModal')).show();

            // Attach redirect on button click
            document.getElementById("redirectBtn").onclick = function() {
                const selectedDocs = Array.from(document.querySelectorAll(".row-checkbox:checked"))
                    .map(checkbox => JSON.parse(checkbox.getAttribute('data-documents')));

                if (selectedDocs.length === 0) {
                    alert("Please select at least one row before proceeding.");
                    return;
                }

                redirectToDetailsPage(selectedDocs);
            };
        });
    });
});


</script>

<!-- Modal for Choosing Action -->
<div class="modal fade" id="actionModal" tabindex="-1" aria-labelledby="actionModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="actionModalLabel">Choose Action</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Please choose what you want to do:</p>
        <button type="button" class="btn btn-primary" id="showCardsBtn">Show Stages</button>
        <button type="button" class="btn btn-secondary" id="showTableBtn">Show Table</button>
      </div>
    </div>
  </div>
</div>
{{!-- 
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true" >
  <div class="modal-dialog modal-md" role="document"> <!-- Smaller modal with modal-md -->
    <div class="modal-content">
      <div class="modal-header custom-header">
        <h5 class="modal-title text-white" id="detailsModalLabel">Student Details</h5>
         <button type="button" class="btn-close " data-bs-dismiss="modal" aria-label="Close" style=" background-color: white !important;"></button>
    
      </div>
      <div class="modal-body">
        <div class="table-responsive custom-table-container">
          <table class="table custom-table">
            <thead>
            <tr>
             
              <th scope="col">Name</th>
              <th scope="col">Email</th>
              <th scope="col">Mobile</th>
               <th scope="col">Course</th>
              <th scope="col">Specialization</th>
              <th scope="col">Status</th>

            </tr>
          </thead>
          <tbody id="modalTableBody">
            <!-- Rows will be populated dynamically -->
          </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer custom-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Close</button>
      </div>
    </div>
  </div>
</div>



<!-- Main Stage Cards -->
{{#each mainStageCounts}}
    <div class="col-6 col-xl-3">
        <div 
            class="stat-card {{#if (eq mainStage 'Not Contacted')}}bg-warning{{else}}bg-gradient-neon{{/if}} text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl main-stage-card" 
            data-stage="{{mainStage}}" 
            data-documents='{{json this.documents}}'>
            
            <!-- Conditional Icon -->
            {{#if (eq mainStage 'Not Contacted')}}
                <i class="fa fa-phone-slash fa-3x text-dark"></i> <!-- Icon for Not Contacted -->
            {{else}}
                <i class="fa fa-briefcase fa-3x neon-icon"></i> <!-- Default Icon -->
            {{/if}}
            
            <div class="ms-3">
                <p class="mb-2 counts">{{mainStage}}</p>
                <h6 class="mb-0">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}



<!-- Stage Cards -->
{{#each stageCounts}}
    <div class="col-6 col-xl-3 stage-card d-none" 
         data-main-stage="{{mainStage}}" 
         data-stage="{{stage}}" 
         data-documents='{{json this.documents}}'>
        <div class="stat-card bg-gradient-info text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl">
            <i class="fa fa-layer-group fa-3x neon-icon"></i>
            <div class="ms-3">
                <p class="mb-2 counts">{{stage}}</p>
                <h6 class="mb-0">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}

<!-- Sub-Stage Cards -->
{{#each subStageCounts}}
    <div class="col-6 col-xl-3 sub-stage-card d-none" 
         data-stage="{{stage}}" 
         data-sub-stage="{{subStage}}" 
         data-documents='{{json this.documents}}'>
        <div class="stat-card bg-gradient-white text-white rounded d-flex align-items-center justify-content-between p-4 shadow-xl">
            <i class="fa fa-tags fa-3x neon-icon"></i>
            <div class="ms-3">
                <p class="mb-2 counts">{{subStage}}</p>
                <h6 class="mb-0 black">{{count}}</h6>
            </div>
        </div>
    </div>
{{/each}}


 --}}

{{!-- <div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true" >
  <div class="modal-dialog modal-md" role="document"> <!-- Smaller modal with modal-md -->
    <div class="modal-content">
      <div class="modal-header custom-header">
        <h5 class="modal-title text-white" id="detailsModalLabel">Client Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="table-responsive custom-table-container">
          <table class="table custom-table">
            <thead>
            <tr>
             
              <th scope="col">Name</th>
              <th scope="col">Email</th>
              <th scope="col">Mobile</th>
               <th scope="col">Course</th>
              <th scope="col">Specialization</th>
              <th scope="col">Status</th>

            </tr>
          </thead>
          <tbody id="modalTableBody">
            <!-- Rows will be populated dynamically -->
          </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer custom-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
 --}}


{{!-- 

<script>
document.addEventListener("DOMContentLoaded", function() {
    let selectedMainStage = null;
    let selectedStage = null;
    let documents = null;
    const backBtn = document.getElementById("backBtn");

    // Initialize Back Button
    backBtn.style.display = "none";

    function showBackButton() {
        backBtn.style.display = "block";
    }

    function hideBackButton() {
        backBtn.style.display = "none";
    }

    function resetView() {
        document.querySelectorAll(".main-stage-card, .stage-card, .sub-stage-card").forEach(function(card) {
            card.classList.add("d-none");
        });
        document.querySelectorAll(".main-stage-card").forEach(function(card) {
            card.classList.remove("d-none");
        });
        hideBackButton();
    }

    // Handle Back Button Click
    backBtn.addEventListener("click", function() {
        if (selectedStage) {
            // If sub-stages are being viewed, go back to stage view
            document.querySelectorAll(".sub-stage-card").forEach(function(card) {
                card.classList.add("d-none");
            });
            document.querySelectorAll(`.stage-card[data-main-stage="${selectedMainStage}"]`).forEach(function(card) {
                card.classList.remove("d-none");
            });
            selectedStage = null;
        } else if (selectedMainStage) {
            // If stages are being viewed, go back to main stage view
            document.querySelectorAll(".stage-card, .sub-stage-card").forEach(function(card) {
                card.classList.add("d-none");
            });
            document.querySelectorAll(".main-stage-card").forEach(function(card) {
                card.classList.remove("d-none");
            });
            selectedMainStage = null;
        } else {
            // If at the main stage view, reset everything
            resetView();
        }
    });

    // Handle main stage card click
    document.querySelectorAll(".main-stage-card").forEach(function(mainStageCard) {
        mainStageCard.addEventListener("click", function() {
            selectedMainStage = this.dataset.stage;
            documents = JSON.parse(this.getAttribute('data-documents'));

            showBackButton();

            // Show the action modal
            new bootstrap.Modal(document.getElementById('actionModal')).show();

            // Update button text to "Show Stages"
            document.getElementById("showCardsBtn").textContent = "Show Stages";

            // Attach action listeners
            document.getElementById("showCardsBtn").onclick = function() {
                // Show stage cards related to the selected main stage
                document.querySelectorAll(".stage-card, .sub-stage-card").forEach(function(card) {
                    card.classList.add("d-none");
                });
                document.querySelectorAll(`.stage-card[data-main-stage="${selectedMainStage}"]`).forEach(function(stageCard) {
                    stageCard.classList.remove("d-none");
                });
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
            };

            document.getElementById("showTableBtn").onclick = function() {
                // Display the table in the modal
                const modalTableBody = document.getElementById('modalTableBody');
                modalTableBody.innerHTML = ''; // Clear previous data
                documents.forEach(doc => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                             <td>${doc.name}</td>
                        <td>${doc.email}</td>
                        <td>${doc.mobile}</td>
                         <td>${doc.course}</td>
                        <td>${doc.specialization}</td>
                        <td>${doc.status}</td>
                        <!-- Add more cells as needed -->
                    `;
                    modalTableBody.appendChild(row);
                });
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
                new bootstrap.Modal(document.getElementById('detailsModal')).show();
            };
        });
    });

    // Handle stage card click
    document.querySelectorAll(".stage-card").forEach(function(stageCard) {
        stageCard.addEventListener("click", function() {
            selectedStage = this.dataset.stage;
            documents = JSON.parse(this.getAttribute('data-documents'));

            showBackButton();

            // Show the action modal
            new bootstrap.Modal(document.getElementById('actionModal')).show();

            // Update button text to "Show Sub-Stages"
            document.getElementById("showCardsBtn").textContent = "Show Sub-Stages";

            // Attach action listeners
            document.getElementById("showCardsBtn").onclick = function() {
                // Hide all other stages and sub-stages
                document.querySelectorAll(".stage-card, .sub-stage-card").forEach(function(card) {
                    card.classList.add("d-none");
                });

                // Show the clicked stage count
                document.querySelectorAll(`.stage-card[data-stage="${selectedStage}"]`).forEach(function(stageCard) {
                    stageCard.classList.remove("d-none");
                });

                // Show sub-stage cards related to the selected stage
                document.querySelectorAll(`.sub-stage-card[data-stage="${selectedStage}"]`).forEach(function(subStageCard) {
                    subStageCard.classList.remove("d-none");
                });

                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
            };

            document.getElementById("showTableBtn").onclick = function() {
                // Display the table in the modal
                const modalTableBody = document.getElementById('modalTableBody');
                modalTableBody.innerHTML = ''; // Clear previous data
                documents.forEach(doc => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                             <td>${doc.name}</td>
                        <td>${doc.email}</td>
                        <td>${doc.mobile}</td>
                         <td>${doc.course}</td>
                        <td>${doc.specialization}</td>
                        <td>${doc.status}</td>
                        <!-- Add more cells as needed -->
                    `;
                    modalTableBody.appendChild(row);
                });
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
                new bootstrap.Modal(document.getElementById('detailsModal')).show();
            };
        });
    });

    // Handle sub-stage card click
    document.querySelectorAll(".sub-stage-card").forEach(function(subStageCard) {
        subStageCard.addEventListener("click", function() {
            documents = JSON.parse(this.getAttribute('data-documents'));

            // Display the table in the modal directly
            const modalTableBody = document.getElementById('modalTableBody');
            modalTableBody.innerHTML = ''; // Clear previous data
            documents.forEach(doc => {
                const row = document.createElement('tr');
                row.innerHTML = `
                           <td>${doc.name}</td>
                        <td>${doc.email}</td>
                        <td>${doc.mobile}</td>
                         <td>${doc.course}</td>
                        <td>${doc.specialization}</td>
                        <td>${doc.status}</td>
                    <!-- Add more cells as needed -->
                `;
                modalTableBody.appendChild(row);
            });
            new bootstrap.Modal(document.getElementById('detailsModal')).show();
        });
    });
});
</script> --}}


<script>
  document.getElementById('latestBtn').addEventListener('click', function() {
    const dateRange = document.getElementById('dateRange').value;
    const preset = document.getElementById('presetDateRange').value;

    let startDate, endDate;

    // Calculate dates based on preset
    const today = new Date();
    switch(preset) {
        case 'today':
            startDate = endDate = today.toISOString().split('T')[0];
            break;
        case 'this-week':
            const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 1));
            const lastDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 7));
            startDate = firstDayOfWeek.toISOString().split('T')[0];
            endDate = lastDayOfWeek.toISOString().split('T')[0];
            break;
        case 'last-month':
            const firstDayOfLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
            const lastDayOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
            startDate = firstDayOfLastMonth.toISOString().split('T')[0];
            endDate = lastDayOfLastMonth.toISOString().split('T')[0];
            break;
        case 'last-year':
            const firstDayOfLastYear = new Date(today.getFullYear() - 1, 0, 1);
            const lastDayOfLastYear = new Date(today.getFullYear() - 1, 11, 31);
            startDate = firstDayOfLastYear.toISOString().split('T')[0];
            endDate = lastDayOfLastYear.toISOString().split('T')[0];
            break;
        default:
            if (dateRange) {
                [startDate, endDate] = dateRange.split(' to ');
            }
            break;
    }

    // Check if no date is selected
    if (!startDate || !endDate) {
      alert('Please select a date range or a preset date range.');
      return;
    }

    const url = `/crm-lead-owner-dashboard?startDate=${startDate}&endDate=${endDate}&showLatestSubstage=true`;
    window.location.href = url;
  });

  
</script>


       
     
<!-- Back to Top -->
<a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top neon-btn"><i class="bi bi-arrow-up"></i></a>

<style>
 
</style>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
  flatpickr("#dateRange", {
    mode: "range",
    dateFormat: "Y-m-d", // Adjust the date format if needed
    onChange: function(selectedDates, dateStr, instance) {
      // Optional: you can add logic here to handle date changes
    }
  });
</script>




    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/chart/chart.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <!-- Template Javascript -->
    <script src="js/main.js"></script>
</body>

</html>