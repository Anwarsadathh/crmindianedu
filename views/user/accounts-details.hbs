<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>CRM TL Spreadsheet Leads</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
 <!-- Add necessary meta tags and links to CSS/JS files -->
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" rel="stylesheet">
  <!-- Bootstrap JS -->
  <!-- DataTables JS -->
  <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');

.search{
  
  top:6px;
  left:9px;
}
     .date-input {
    width: 100% !important;
    padding: 6px!important;
    font-size: 10px !important;
    border-radius: 4px !important;
    border: 1px solid #ced4da !important;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075) !important;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !important;
}

.date-input:focus {
    border-color: #80bdff !important;
    outline: 0 !important;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25) !important;
}

.form-control{
    
    border:none;
    padding-left:32px;
}
.tt {
    margin-top: 9px;
    border-radius: 9px;

}
.container{
    background-color: #f2f9f6 !important; /* Very pale mint green */

}
.table-responsive{
    padding: 9px;
}
.form-control:focus{
    
    border:none;
    box-shadow:none;
}

.green{
    
    color:green;
}
/* Button styles */
.btn-status {
    font-size: 10px; /* Smaller font size for buttons */
    padding: 4px 8px; /* Smaller padding for buttons */
    transition: background-color 0.3s ease;
}

.btn-not-paid {
    background-color: #e8172c; /* Red */
    color: #fff;
}

.btn-paid {
    background-color: #28a745; /* Green */
    color: #fff;
}

.btn-not-approved {
    background-color: #ffc107; /* Yellow */
    color: #000;
}

.btn-approved {
    background-color: #17a2b8; /* Teal */
    color: #fff;
}

.btn-not-done {
    background-color: #ffc107; /* Yellow */
    color: #000;
}

.btn-done {
    background-color: #28a745; /* Green */
    color: #fff;
}

.btn-status.active-paid {
    background-color: #28a745 !important; /* Green */
    color: #fff;
}

.btn-status.active-not-paid {
    background-color: #dc3545 !important; /* Red */
    color: #fff;
}

.btn-status.active-not-approved {
    background-color: #ffc107 !important; /* Yellow */
    color: #000;
}
{{!-- /* Ensure the table takes the full width of its container */
.table {
    height: 500px !important;
    border-collapse: collapse;
    font-size: 10px; /* Smaller font size for table content */
    table-layout: auto; /* Allow the table to adjust column widths based on content */
    overflow: auto; /* To allow scrolling if necessary */
    width: 100%; /* Ensure the table takes full width of the container */
}

/* Ensure the table header stays fixed at the top */
.table thead th {
    position: sticky;
    top: 0;
    background-color: #fff; /* Solid background color for visibility */
    z-index: 2; /* Ensure it stays on top of other content */
}

/* Table header and cells styling */
.table thead th,
.table tbody td {
    text-align: left;
    padding: 6px; /* Reduced padding for a smaller appearance */
    border: 1px solid #dee2e6;
    font-size: 10px; /* Consistent smaller font size */
    width: 90px; /* Auto width to fit content dynamically */
    overflow: hidden; /* Prevent overflow for cells */
    text-overflow: ellipsis; /* Add ellipsis for overflowed text */
    white-space: nowrap; /* Prevent text wrapping */
}

.table thead th {
    background-color: #232f65;
    color: #ffffff;
}


/* Hover color for rows */
.table tbody tr:hover {
    background-color: #d0e3ff; 
} --}}
/* Ensure the table takes the full width of its container */
.table {
    height: 500px !important;
    border-collapse: collapse;
    font-size: 10px; /* Smaller font size for table content */
    table-layout: fixed; /* Ensures fixed widths are respected */
    overflow: auto; /* To allow scrolling if necessary */
}

/* Ensure the table header stays fixed at the top */
.table thead th {
    position: sticky;
    top: 0;
    background-color: #fff; /* Solid background color for visibility */
    z-index: 2; /* Ensure it stays on top of other content */
}

/* Table header and cells styling */
.table thead th,
.table tbody td {
    text-align: left;
    padding: 6px; /* Reduced padding for a smaller appearance */
    border: 1px solid #dee2e6;
    font-size: 10px; /* Consistent smaller font size */
    width: 80px; /* Fixed width for consistency */
    overflow: hidden; /* Prevent overflow for fixed-width cells */
    text-overflow: ellipsis; /* Add ellipsis for overflowed text */
    white-space: nowrap; /* Prevent text wrapping */
}

.table thead th {
    background-color: #232f65;
    color: #ffffff;
}
/* Sticky position for the first column (studentname) */
.table tbody td.sticky {
    position: sticky;
    left: 0;
    background-color: #fff;
    z-index: 1;
}

/* Sticky position for the second column (studentid) */
.table tbody td.sticky-second {
    position: sticky;
    left: 120px; /* Adjust based on the width of the first sticky column */
    background-color: #fff;
    z-index: 1;
}

/* Sticky position for the third column */
.table tbody td.sticky-third {
    position: sticky;
    left: 240px; /* Adjust based on the combined width of first and second sticky columns */
    background-color: #fff;
    z-index: 1;
}

/* Sticky position for the fourth column */
.table tbody td.sticky-fourth {
    position: sticky;
    left: 360px; /* Adjust based on the combined width of first, second, and third sticky columns */
    background-color: #fff;
    z-index: 1;
}

/* Ensure that the sticky headers remain above the sticky columns */
.table thead th.sticky {
    position: sticky !important;
    left: 0 !important;
    z-index: 3 !important;
}

.table thead th.sticky-second {
    position: sticky !important;
    left: 120px !important;
    z-index: 3 !important;
}

.table thead th.sticky-third {
    position: sticky !important;
    left: 240px !important;
    z-index: 3 !important;
}

.table thead th.sticky-fourth {
    position: sticky !important;
    left: 360px !important;
    z-index: 3 !important;
}

/* Adjust other table-related styles if necessary */


.btn-status.active-approved {
    background-color: #17a2b8 !important; /* Teal */
    color: #fff;
}

.btn-status.active-not-done {
    background-color: #ffc107 !important; /* Yellow */
    color: #000;
}

.btn-status.active-done {
    background-color: #28a745 !important; /* Green */
    color: #f4f4f4;
}
/* DataTables styles */
.dataTables_wrapper .dataTables_filter {
    float: right;
    text-align: right;
    margin-bottom: 9px; /* Add margin below the search bar */
}

.dataTables_wrapper .dataTables_filter input {
    margin-left: 0.5em;
    display: inline-block;
    width: auto;
    margin-bottom: 9px; /* Add margin below the search bar */
        position: sticky !important;
}

.dataTables_wrapper .dataTables_length {
    float: left;
    margin-bottom: 9px; /* Add margin below the length dropdown */
}

.dataTables_wrapper .dataTables_info {
    float: left;
}

.dataTables_wrapper .dataTables_paginate {
    float: right;
    margin-top: 9px; /* Add margin above the pagination controls */

}
/* Container for table */
.table-wrapper {
    position: relative; /* To contain the sticky header */
    overflow: auto; /* Allows the table body to scroll */
    height: 80vh; /* Use viewport height units to make it responsive */
    max-height: 100vh; /* Ensure it doesn't exceed the screen height */
    min-height: 50vh; /* Optional: Set a minimum height */
}

#dataTable thead {
    position: sticky !important;
    top: 0 !important;
    z-index: 100 !important; /* Ensure the header stays on top of the table content */
    background-color: #fff ; /* Set a background color to the header */
}
input, select , textarea{
font-size: 10px !important;
color: black !important;
background-color: #dee8f2 !important;
}
/* Button styles */

/* Correct button: Green background for correct answers */
.btn-correct {
    background-color: #28a745; /* Green color */
    color: white;
}

/* Incorrect button: Red background for wrong answers */
.btn-incorrect {
    background-color: #dc3545; /* Red color */
    color: white;
}
button{
    font-size: 10px !important;
}


.container-fluida{
    background-color: #d6d6d6 !important;
    padding: 9px !important;
}
#dataTable{
    background-color: white !important;
}
label{
        font-size: 10px !important;
        font-weight: 500;
       }

        /* Modal Container */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  z-index: 9999;
  overflow: auto;
  animation: fadeIn 0.5s ease-in-out;
}

/* Modal Content */
.modal-content {
  background: none !important;
  margin: 5% auto;
  padding: 20px;
  border-radius: 8px;
  width: 80%;
  max-width: 700px;
  position: relative;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  animation: slideIn 0.5s ease-in-out;
}

/* Close Button */
.close-button {
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 24px;
  font-weight: bold;
  color: #ff4d4d;
  cursor: pointer;
  transition: color 0.3s;
}

.close-button:hover {
  color: #ff1a1a;
}

/* Modal Content Styling */
#modalContent {
  color: #333;
  font-family: Arial, sans-serif;
}

h3 {
  color: #333;
  margin-bottom: 20px;
}

/* Modal Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(-30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

       .card {
    padding-top: 10px;
    display: flex;
     background: #232f65 url('/img/jk.png'); /
    border-radius: 10px;
    overflow: hidden;
 box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;
    background-size: cover; /* Ensure background images cover the card */
    background-blend-mode: overlay;
    width: 600px;
    transition: transform 0.3s;
}

        .card:hover {
            transform: scale(1.03);
        }
/* Base styles for cards */
.bg-light {
    background-color: #f8f9fa;
}

.rounded {
    border-radius: .375rem;
}

.d-flex {
    display: flex;
}

.align-items-center {
    align-items: center;
}

.justify-content-between {
    justify-content: space-between;
}


/* Responsive styles */
@media (max-width: 768px) {
    .col-sm-6 {
        flex: 0 0 50%;
        max-width: 50%;
    }
}

        .photo-container {
            width: 150px;
            background: white;
            display: flex;
            justify-content: center;
            margin-top: -170px;
            align-items: center;
            border-left: 4px solid #fff;
        }

        .photo-placeholder {
            background-color: #ddd;
            height: 120px;
            width: 120px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 10px auto;
            font-weight: bold;
            font-size: 18px;
            text-align: center;
        }

        .info {
            padding: 20px;
            color: white;
            flex: 1;
        }

        h2 {
            margin: 0 0 10px;
        }

        p {
            margin: 5px 0;
        }

        .links {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
        }

        .link {
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            padding: 10px;
            text-align: center;
            border-radius: 5px;
            text-decoration: none;
            flex: 1 1 48%;
            transition: background 0.3s;
            box-sizing: border-box;
        }

        .link:hover {
            background: rgba(255, 255, 255, 0.3);
        }
 .photo-container {
    width: 150px;
    background: white;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    border-left: 4px solid #fff;
}

.photo-placeholder {
    background-color: #ddd;
    height: 120px;
    width: 120px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: 18px;
    text-align: center;
}

.edit-icon {
    position: absolute;
    bottom: 0;
    right: 0;
    color: rgb(0, 0, 0);
    border-radius: 50%;
    padding: 5px;
    cursor: pointer;
    font-size: 20px;
    transition: background 0.3s;
}

.edit-icon:hover {
    background: #0056b3;
}
.text-white{
    color: white !important;
}
#profilePhoto {

    border-radius: 50%;
    height: 120px;
    width: 120px;
    object-fit: cover;
}
.info p {
    
    background-image: linear-gradient(147deg, #c3cbdc 0%, #edf1f4 74%); /* White gradient */
    -webkit-background-clip: text; /* Clips the background to the text */
    -webkit-text-fill-color: transparent; /* Makes the text itself transparent */
  
}

.info h2 {
    background-image: linear-gradient(135deg, #ffffff, #e0e0e0); /* White gradient */
    -webkit-background-clip: text; /* Clips the background to the text */
    -webkit-text-fill-color: transparent; /* Makes the text itself transparent */
    background-clip: text; /* Ensures the effect works on all browsers */
    text-fill-color: transparent; /* Ensures the text is filled with the gradient */
/* Adds the margin bottom */
}

        @media (max-width: 768px) {
           .card {
        width: 350px;
        padding: 15px;
        margin: 10px auto; /* Add margin for spacing on mobile screens */
        background-size: contain; /* Make the background image smaller */
        background-position: center; /* Center the background image */
    }

            .photo-container {
                width: 100px !important;
                margin-top: -130px;
            }

            .photo-placeholder {
                height: 80px !important;
                width: 80px !important;
                font-size: 14px;
            }

            .info {
                padding: 10px;
            }

            h2 {
                font-size: 18px;
            }

            p {
                font-size: 11px;
            }
        }
        .container-fluid{
  
    display: flex;
    align-items: center;
    justify-content: center;
        }
       .form-select ,.form-control ,label{
        font-size: 10px !important;
        font-weight: 500;
       }
</style>
</head>

<body>
    <div class="container-xxl position-relative bg-white d-flex p-0" style="background-color: #232f65;">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->


        <!-- Sidebar Start -->
        <div class="sidebar pe-4 pb-3" style="background-color: #232f65;">
            <nav class="navbar " style="background-color: #232f65;">
                <a href="/accounts-dashboard" class="navbar-brand mx-4 mb-3">
                    <h3 class="text-primary"> <img src="/images/indian-hub-logo-vert-white-e1662813826792.png" alt="Indian Edu Hub Logo" class="log"></h3>
                </a>
                <div class="d-flex align-items-center ms-4 mb-4" style="background-color: #232f65;">
                      
                    <div class="ms-3" >
                        <h6 class="mb-0 text-white">Indianeduhub</h6>
                        <span style="color: rgb(209, 211, 212);">Accounts</span>
                    </div>
                </div>
                <div class="navbar-nav w-100" style="background-color: #232f65;">
                    <a href="/accounts-dashboard" class="nav-item nav-link text-white "><i class="fa fa-tachometer-alt me-2 text-dark"></i>Dashboard</a>
                    <a href="/accounts-details" class="nav-link  text-dark active" ><i class="fa fa-laptop me-2 text-dark"></i>Leads</a>
                     <a href="/create-payments" class="nav-item nav-link text-white "><i class="fa fa-tachometer-alt me-2 text-dark"></i>Create Pay Steps</a>
                 <a href="/accounts-invoice" class="nav-item nav-link text-white "><i class="fa fa-tachometer-alt me-2 text-dark"></i>Invoice</a>
                <a href="/accounts-wallets" class="nav-item nav-link text-white "><i class="fa fa-tachometer-alt me-2 text-dark"></i>Wallet</a>
                <a href="/accounts-client-details" class="nav-item nav-link text-white "><i class="fa fa-tachometer-alt me-2 text-dark"></i>Client Support</a>
                </div>
            </nav>
        </div>
        <!-- Sidebar End -->


        <!-- Content Start -->
        <div class="content">
            <!-- Navbar Start -->
            <nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
                <a href="/accounts-dashboard" class="navbar-brand d-flex d-lg-none me-4">
                    <h2 class="text-primary mb-0"><img src="/img/ie.png" alt="Indian Edu Hub Logo" style="height: 30px;"></h2>
                </a>
                <a href="#" class="sidebar-toggler flex-shrink-0">
                    <i class="fa fa-bars"></i>
                </a>
                <form class="d-none d-md-flex ms-4">
                    <input class="form-control border-0" type="search" placeholder="Search">
                </form>
                <div class="navbar-nav align-items-center ms-auto">
                    
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fa fa-bell me-lg-2"></i>
                            <span class="d-none d-lg-inline-flex">Notification</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                            <a href="#" class="dropdown-item">
                                <h6 class="fw-normal mb-0">Profile updated</h6>
                                <small>15 minutes ago</small>
                            </a>
                       
                            <hr class="dropdown-divider">
                            <a href="#" class="dropdown-item text-center">See all notifications</a>
                        </div>
                    </div>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            <img class="rounded-circle me-lg-2" src="/images/anon.webp" alt="" style="width: 40px; height: 40px;">
                            <span class="d-none d-lg-inline-flex">Accounts</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                            <a href="#" class="dropdown-item">Log Out</a>
                        </div>
                    </div>
                </div>
            </nav>
            <!-- Navbar End -->


<div class="container tt  px-2">
<div class="container">
    <!-- Button Section -->
    <div class="d-flex justify-content-between align-items-center  flex-wrap">
        <!-- University Filter -->
      <div class="col-md-8 d-flex justify-content-start align-items-center flex-wrap">
  <!-- University Filter -->
  <div class="col-md-2">
    <label for="universityFilter" class="form-label"><b>Filter by University:</b></label>
    <select id="universityFilter" class="form-select filter-select">
      <option value="">All Universities</option>
     <option value="Manipal Jaipur University">Manipal Jaipur University</option>
  <option value="Manipal Sikkim University">Manipal Sikkim University</option>
  <option value="Jain Online University">Jain Online University</option>
  <option value="Jain ODL University">Jain ODL University</option>
  <option value="Vignan University">Vignan University</option>
  <option value="Amity University">Amity University</option>
  <option value="SVSU">SVSU</option>
  <option value="Aligarh Muslim University Online">Aligarh Muslim University Online</option>
  <option value="KLU Online">KLU Online</option>
  <option value="Mizoram University">Mizoram University</option>
  <option value="Jamia Hamdard University">Jamia Hamdard University</option>
  <option value="Uttaranchal University">Uttaranchal University</option>
  <option value="Andhra University">Andhra University</option>
  <option value="LPU">LPU</option>
   <option value="Amrita University">Amrita University</option>
    <option value="DY Patil University">DY Patil University</option>
    </select>
  </div>

  <!-- Date Range Filter -->
  <div class="col-md-3 ms-2">
    <label for="dateRangeFilter" class="form-label"><b>Select Date Range:</b></label>
    <input type="text" id="dateRangeFilter" class="form-control" />
  </div>

  <!-- Filter by Year -->
  <div class="col-md-2 ms-2">
    <label for="yearFilter" class="form-label"><b>Filter By Doc Year:</b></label>
    <select id="yearFilter" class="form-select filter-select">
      <option value="">All Years</option>
      <option value="2024">2024</option>
      <option value="2023">2023</option>
      <option value="2022">2022</option>
      <option value="2021">2021</option>
    </select>
  </div>

  <!-- Clear Button -->
  <div class="col-md-1 ms-2 align-self-end">
    <button id="clearFiltersBtn" class="btn btn-sm btn-danger">
      <i class="fas fa-times-circle"></i> 
    </button>
  </div>
</div>

        <!-- Save Changes Button -->
        <div class="col-md-2 ">
            <button id="saveChangesBtn" class="btn btn-primary mx">Save Changes</button>
          <button id="hideFieldsButton" class="btn-sm btn-dark mx-2" role="button">
    <span class="text">
        <i id="toggleIcon" class="fas fa-eye"></i> 
    </span>
</button>

        </div>


    </div>
</div>


      
    <div class="table-responsive">
       <div class="table-wrapper ">
        <table class="table table-responsive table-borderless" id="dataTable">
           
            
          
            <thead>
                <tr class="bg-light">
                    <th hidden>id</th>
                    <th style="width: 10px !important;">No.</th>
                    <th class="sticky">Date</th>
                    <th class="sticky-second">Doc Date</th>
                    <th>Student ID</th>
                    <th class="sticky-third" style="width: 10px !important;">Student Name</th>
                    <th>Course</th>
                    <th class="toggle-column">Spec</th>
                    <th class="toggle-column">Email</th>
                    <th class="toggle-column">Mobile Number</th>
                    <th class="toggle-column">State</th>
                    <th class="toggle-column">Counselor Name</th>
                    <th >Service Pack</th>
                    <th class="toggle-column">Intake</th>
                    
                    <th class="toggle-column">Initial Reg</th>
                    <th class="toggle-column">Initial Reg Date</th>
                    <th class="toggle-column">Uni Paid</th>
                    <th >Uni Fee Paid Date</th>
                    <th class="toggle-column">Document Status</th>
                    <th class="toggle-column">Uni Refund Initiated</th>
                    <th class="toggle-column">Date of Uni Refund Initiated</th>
                    <th class="toggle-column">IEH Refund Initiated</th>
                    <th class="toggle-column">Date of IEH Refund Initiated</th>
                    <th class="toggle-column">Scholarship</th>
                    <th >Mode</th>
                    <th >Amount</th>
                    <th class="toggle-column">Semester Status</th>
                    <th class="toggle-column">Batch</th>
                    <th class="toggle-column">Enrollment No</th>
                    <th class="toggle-column">ApplicationNo</th>
                    <th>Degree Type</th>
                    <th>University</th>
                    <th>TEA</th>
                    <th>Study Status</th>
                         <th>Payment Step 1</th> <!-- New header -->
    <th>Details for Step 1</th> <!-- New header -->
    <th>Payment Step 2</th> <!-- New header -->
    <th>Details for Step 2</th> <!-- New header -->
    <th>Payment Step 3</th> <!-- New header -->
    <th>Details for Step 3</th> <!-- New header -->
    <th>Final Status</th>
    <th>TGA</th>
    <th>Referral Wallet</th>
    <th>Partner Wallet</th>
    <th>Own Wallet</th>
    {{!-- <th>Action</th> --}}
                </tr>
            </thead>
            <tbody>
                {{#each formData}}
               <tr data-id="{{this._id}}">
        <td hidden>{{this._id}}</td> <!-- The ID is stored in a hidden cell for reference -->
                    <td style="width: 10px !important;">{{incrementIndex @index}}</td>
                    <td class="text-danger font-weight-bold sticky" style="width: 20px !important;">{{formatDates this.date}}</td>
                    <td class="text-danger font-weight-bold sticky-second" style="width: 20px !important;">{{formatDates this.docApprovedDate}}</td>
                    <td class="text-dark font-weight-bold">{{this.studentid}}</td>
                    <td class="sticky-third" style="width: 20px !important;">{{this.name}}</td>
                    <td >{{this.course}}</td>
                     <td class="hideable">{{this.specialization}}</td>
                    <td class="hideable">{{this.email}}</td>
                    <td class="hideable">{{this.mobile}}</td>
                    <td class="hideable" >{{this.state}}</td>
                    <td class="hideable">{{this.specificName}}</td>
                    <td >{{this.servicePack}}</td>
                    <td class="hideable">{{this.intake}}</td>
                   
                    <td class="hideable">{{this.initialRegistration}}</td>
                    <td class="hideable">{{formatDates this.initialDate}}</td>
                    <td class="hideable">
                        <button class="btn btn-status btn-paid">{{this.universityPaid}}</button>
                    </td>
                    <td >{{formatDates this.universityPaidDate}}</td>
                    <td class="hideable">
                        <button class="btn btn-status btn-approved">{{this.documentStatus}}</button>
                    </td>
                    <td class="hideable detail-row">
                        {{#if this.unirefundinitiated}}
                        {{this.unirefundinitiated}}
                        {{else}}
                        N/A
                        {{/if}}
                    </td>
                    <td class="hideable refund-cell detail-row">
                        {{#if this.unirefundinitiated}}
                        {{this.unirefundinitiated}}
                        {{else}}
                        N/A
                        {{/if}}
                    </td>
                    <td class="hideable detail-row">
                        {{#if this.iehrefundinitiated}}
                        {{this.iehrefundinitiated}}
                        {{else}}
                        N/A
                        {{/if}}
                    </td>
                    <td class="hideable refund-cell detail-row">
                        {{#if this.iehrefundinitiated}}
                        {{this.iehrefundinitiated}}
                        {{else}}
                        N/A
                        {{/if}}
                    </td>
                    <td class="hideable">{{this.scholarship}}</td>
                    <td >{{this.feepaid}}</td>
                    <td >{{this.feePaidAmount}}</td>
                    <td class="hideable">{{this.semesterStatus}}</td>
                    <td class="hideable">{{this.batch}}</td>
                    <td class="hideable">{{this.enrollmentNo}}</td>
                    <td class="hideable">{{this.applicationNo}}</td>
                                       <td>
        <select class="form-select">
            <option value="" {{#if (eq this.degreeType "")}}selected{{/if}}>Select Degree</option>
            <option value="UG" {{#if (eq this.degreeType "UG")}}selected{{/if}}>UG</option>
            <option value="PG" {{#if (eq this.degreeType "PG")}}selected{{/if}}>PG</option>
        </select>
    </td>
       <td>
  <a href="#" onclick="sendEmail('{{this.university}}', '{{this.name}}', '{{this.enrollmentNo}}', '{{this.course}}', '{{this.specialization}}', '{{this.feePaidAmount}}', '{{this.feepaid}}', '{{this.batch}}' ,'{{this.applicationNo}}')">
    {{this.university}}
  </a>
</td>
<td>
  <input 
    type="number" 
    id="totalExpectedAMt" 
    class="form-control me-2 amts" 
    placeholder="{{#if (eq this.totalExpectedAMt "")}}Enter Expected Amount{{else}}Expected Amount{{/if}}" 
    value="{{this.totalExpectedAMt}}" 
  />
  <div class="d-flex align-items-center mt-2">
    <input 
      type="date" 
      id="totalExpectedAMtDate" 
      class="form-control me-2 date" 
      placeholder="{{#if (eq this.totalExpectedAMtDate "")}}Select Expected Date{{else}}Expected Date{{/if}}" 
      value="{{this.totalExpectedAMtDate}}" 
    />
  </div>
</td>

             <td>
  <select id="studyStage" class="form-select mb-2 date" name="studyStage">
      <option value=""  {{#if (eq this.studyStage "")}}selected{{/if}}>Select Sem</option>
      <option value="sem1" {{#if (eq this.studyStage "sem1")}}selected{{/if}}>Sem 1</option>
      <option value="sem2" {{#if (eq this.studyStage "sem2")}}selected{{/if}}>Sem 2</option>
      <option value="sem3" {{#if (eq this.studyStage "sem3")}}selected{{/if}}>Sem 3</option>
      <option value="sem4" {{#if (eq this.studyStage "sem4")}}selected{{/if}}>Sem 4</option>
      <option value="sem5" {{#if (eq this.studyStage "sem5")}}selected{{/if}}>Sem 5</option>
      <option value="sem6" {{#if (eq this.studyStage "sem6")}}selected{{/if}}>Sem 6</option>
      <option value="1st_year" {{#if (eq this.studyStage "1st_year")}}selected{{/if}}>1st Year</option>
      <option value="2nd_year" {{#if (eq this.studyStage "2nd_year")}}selected{{/if}}>2nd Year</option>
      <option value="3rd_year" {{#if (eq this.studyStage "3rd_year")}}selected{{/if}}>3rd Year</option>
      <option value="Full Fee" {{#if (eq this.studyStage "Full Fee")}}selected{{/if}}>Full Fee</option>
  </select>
</td>



           <!-- Payment Step 1 -->
<td>
  <select id="paymentStep1Dropdown" class="form-select date">
    <option disabled selected>Select One</option>
    {{#each ../payments.[0].payments.[0].fields}}
      <option value="{{this}}">{{this}}</option>
    {{else}}
      <option>No Data</option>
    {{/each}}
  </select>
</td>


<td>
  <textarea id="paymentStep1Details" class="form-control" placeholder="Enter details..."></textarea>
  <div class="d-flex align-items-center mt-2">
    <input type="number" id="paymentStep1Amount" class="form-control me-2 amt" placeholder="Amount" />
    <input type="date" id="paymentStep1Date" class="form-control me-2 date" />
    <a href="your-drive-link" target="_blank" class="upload-icon">
      <i class="fas fa-upload"></i>
    </a>
  </div>
</td>

<!-- Payment Step 2 -->
<td>
  <select id="paymentStep2Dropdown" class="form-select date">
    <option disabled selected>Select One</option>
    {{#each ../payments.[0].payments.[1].fields}}
    <option value="{{this}}">{{this}}</option>
    {{else}}
    <option>No Data</option>
    {{/each}}
  </select>
</td>

<td>
  <textarea id="paymentStep2Details" class="form-control" placeholder="Enter details..."></textarea>
  <div class="d-flex align-items-center mt-2">
    <input type="number" id="paymentStep2Amount" class="form-control me-2 amt" placeholder="Amount" />
    <input type="date" id="paymentStep2Date" class="form-control me-2 date" />
    <a href="your-drive-link" target="_blank" class="upload-icon">
      <i class="fas fa-upload"></i>
    </a>
  </div>
</td>

<!-- Payment Step 3 -->
<td>
  <select id="paymentStep3Dropdown" class="form-select date">
    <option disabled selected>Select One</option>
    {{#each ../payments.[0].payments.[2].fields}}
    <option value="{{this}}">{{this}}</option>
    {{else}}
    <option>No Data</option>
    {{/each}}
  </select>
</td>

<td>
  <textarea id="paymentStep3Details" class="form-control" placeholder="Enter details..."></textarea>
  <div class="d-flex align-items-center mt-2">
    <input type="number" id="paymentStep3Amount" class="form-control me-2 amt" placeholder="Amount" />
    <input type="date" id="paymentStep3Date" class="form-control me-2 date" />
    <a href="your-drive-link" target="_blank" class="upload-icon">
      <i class="fas fa-upload"></i>
    </a>
  </div>
</td>


     <!-- Semester Status Dropdown -->
            <td>
  <select id="semesterStatus" class="form-select date">
    <option value="" {{#if (eq this.finalStatus "")}}selected{{/if}}>Select Status</option>
    <option value="Waiting for Sem 2" {{#if (eq this.finalStatus "Waiting for Sem 2")}}selected{{/if}}>Waiting for Sem 2</option>
    <option value="Waiting for Sem 3" {{#if (eq this.finalStatus "Waiting for Sem 3")}}selected{{/if}}>Waiting for Sem 3</option>
    <option value="Waiting for Sem 4" {{#if (eq this.finalStatus "Waiting for Sem 4")}}selected{{/if}}>Waiting for Sem 4</option>
    <option value="Waiting for Sem 5" {{#if (eq this.finalStatus "Waiting for Sem 5")}}selected{{/if}}>Waiting for Sem 5</option>
    <option value="Waiting for Sem 6" {{#if (eq this.finalStatus "Waiting for Sem 6")}}selected{{/if}}>Waiting for Sem 6</option>
    <option value="Completed" {{#if (eq this.finalStatus "Completed")}}selected{{/if}} class="text-success">Completed</option>
    <option value="Dropout" {{#if (eq this.finalStatus "Dropout")}}selected{{/if}} class="text-danger">Dropout</option>
    <option value="Waiting for 2nd Year" {{#if (eq this.finalStatus "Waiting for 2nd Year")}}selected{{/if}}>Waiting for 2nd Year</option>
    <option value="Waiting for 3rd Year" {{#if (eq this.finalStatus "Waiting for 3rd Year")}}selected{{/if}}>Waiting for 3rd Year</option>
  </select>
</td>
<td>
  <input 
    type="number" 
    id="totalAMt" 
    class="form-control me-2 amts" 
    placeholder="{{#if (eq this.totalAMt "")}}Enter Amount{{else}}Amount{{/if}}" 
    value="{{this.totalAMt}}" 
  />
  <div class="d-flex align-items-center mt-2">
    <input 
      type="date" 
      id="totalAMtDate" 
      class="form-control me-2 date" 
      placeholder="{{#if (eq this.totalAMtDate "")}}Select Date{{else}}Date{{/if}}" 
      value="{{this.totalAMtDate}}" 
    />
  </div>
</td>


            <td class="text-success font-weight-bold" onclick="findInstitute('{{this.referredBy}}', {
      studentid: '{{this.studentid}}',
      name: '{{this.name}}',
      course: '{{this.course}}',
      email: '{{this.email}}',
      mobile: '{{this.mobile}}',
      state: '{{this.state}}',
      date: '{{this.date}}',
      amount:'{{feePaidAmount}}'
    })">
      {{this.referredBy}}
    </td>
       <td>
            <select class="form-control amt" id="instituteSelect-{{this.id}}"
              data-studentid="{{this.studentid}}"
              data-name="{{this.name}}"
              data-course="{{this.course}}"
              data-email="{{this.email}}"
              data-mobile="{{this.mobile}}"
              data-state="{{this.state}}"
              data-date="{{this.date}}"
              data-amount="{{feePaidAmount}}"
              onchange="fetchInstituteDetails(this)">
              <option value="">Select Institute</option>
              {{#each ../combinedPartners}}
                <option value="{{this.instituteid}}">
                  {{this.institutename}} ({{this.instituteid}})
                </option>
              {{/each}}
            </select>
          </td>
      <td>
  <select class="form-control amt" id="dropdown-{{this.id}}"
    data-studentid="{{this.studentid}}"
    data-name="{{this.name}}"
    data-course="{{this.course}}"
    data-email="{{this.email}}"
    data-mobile="{{this.mobile}}"
    data-state="{{this.state}}"
    data-date="{{this.date}}"
    data-amount="{{feePaidAmount}}"
    onchange="fetchInstituteDetailss(this)">
    <option value="">Select</option>
    <option value="IEHD" class="text-success font-weight-bold">IEHD</option>
    <option value="IEHP" class="text-dark font-weight-bold">IEHP</option>
  </select>
</td>

   {{!-- <td>
            <button class="btn btn-primary saveChangesBtn">Save Changes</button>
        </td> --}}

                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    </div>
</div>

<script>
  function sendEmail(university, name, enrollmentNo, course, specialization, feePaidAmount,feepaid, batch,applicationNo) {
    let email = '';
   let subject = `Request for Invoice for MBA HR Admission - ${batch}`;
    let body = `Dear ${university} Team,\n\n` +
               `I hope this message finds you well.\n\n` +
               `We would like to request an invoice for one of our students who has enrolled in the ${batch}. Below are the details:\n\n` +
               `Name: ${name}\n` +
               `Enrollment Number: ${enrollmentNo}\n` +
               `Course: ${course}, ${specialization}\n` +
               `Fee Paid: ₹${feePaidAmount}\n` +
               `Mode of Payment: ${feepaid}\n` +
               `Batch: ${batch}\n` +
               `Application: ${applicationNo}\n\n` +
          
               `Please provide the invoice for this payment at your earliest convenience to enable the release of our payout.\n\n` +
               `Should you require any additional information, please feel free to reach out.\n\n` +
               `Thank you for your assistance.\n\n` +
               `Best regards,\n` +
               `Hafsa Rouf\n` +
               `Finance Team\n` +
               `9945330505`;

    // Convert the university name to lowercase to handle case-insensitive matching
    switch (university.toLowerCase()) {
      case "manipal jaipur university":
      case "manipal sikkim university":
        email = 'Soubin.sukumaran@onlinemanipal.com';
        break;
      case "jain online university":
        email = 'adarsh.kh@usdcglobal.com';
        break;
      case "jain odl university":
        email = 'Syed.imran@teamlease.com';
        break;
      case "vignan university":
        email = 'adarsh.kh@usdcglobal.com';
        break;
      case "amity university":
        email = 'billing@univoedtech.com';
        break;
      case "svsu":
      case "aligarh muslim university online":
      case "klu online":
      case "mizoram university":
      case "jamia hamdard university":
      case "uttaranchal university":
      case "andhra university":
        email = 'syed.imran@teamlease.com';
        break;
      case "lpu":
        email = 'connectprashantraghuvanshi@gmail.com';
        break;
      default:
        email = ''; // Handle default case if necessary
    }

    // Encode the email subject and body for use in a URL
    const mailtoLink = `https://mail.google.com/mail/?view=cm&fs=1&to=${email}&su=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
    
    // Open the mailto link in a new tab/window
    window.open(mailtoLink, '_blank');
  }
</script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<!-- Modal Container -->
<div id="instituteModal" class="modal">
  <div class="modal-content">
    <span class="close-button" onclick="closeModal()">&times;</span>
    <div id="modalContent" class="container-fluid pt-4 px-4">
      <!-- The card will be dynamically injected here by JavaScript -->
    </div>
  </div>
</div>
<script>
function fetchInstituteDetailss(selectElement) {
  const instituteId = selectElement.value;
  const studentDetails = {
    studentid: selectElement.dataset.studentid,
    name: selectElement.dataset.name,
    course: selectElement.dataset.course,
    email: selectElement.dataset.email,
    mobile: selectElement.dataset.mobile,
    state: selectElement.dataset.state,
    date: selectElement.dataset.date,
    amount: selectElement.dataset.amount
  };

  if (instituteId) {
    fetch(`/find-supers/${instituteId}`)
      .then(response => response.json())
      .then(data => {
        if (data.message) {
          alert(data.message); // Handle case when no institute is found
        } else {
          // Display the details in the modal
          displayInstituteDetailss(data, studentDetails, instituteId);
        }
      })
      .catch(error => {
        console.error('Error fetching institute details:', error);
      });
  }
}



function displayInstituteDetailss(institute, student, instituteId) {
  const walletField = instituteId === 'IEHD' ? 'wallet' : 'walletP';
  const totalWalletAmount = instituteId === 'IEHD' ? institute.totalWalletAmount : 0;
  const totalWalletAmountP = instituteId === 'IEHP' ? institute.totalWalletAmountP : 0;
  
  const instituteIdDisplay = instituteId === 'IEHD' ? institute.instituteid : institute.instituteidP;

  const details = `
    <div class="container-fluid pt-4 px-4">
      <div class="row g-4">
        <div class="card">
          <div class="info">
            <h2 class="mb-3">${institute.name}</h2>
            <p><strong>Owner Name:</strong> ${institute.owner_name || ''}</p>
            <p><strong>Email:</strong> ${institute.email}</p>
            <p><strong>Institute Place:</strong> ${institute.state || ''}, ${institute.city || ''}</p>
            <p class="text-white"><strong>Institute ID:</strong> <b class="text-white">${instituteIdDisplay}</b> </p>
            <b class="text-warning"><strong>Student ID:</strong> ${student.studentid}, Amount: ${student.amount}</b>
            <div class="photo-container ms-auto" style="border-radius: 10px;">
              <img id="profilePhoto" src="${institute.profilePhoto || '/images/anon.webp'}" class="photo-placeholder" alt="Profile Photo" />
              <div class="edit-icon" onclick="document.getElementById('fileInput').click();">
                <i class="fa fa-edit"></i>
              </div>
            </div>
            <div class="links mt-5 mb-3">
              <form id="sendMoneyForm">
                <div class="form-group mb-3">
                  <label for="amount">Send Wallet Money:</label>
                  <input type="number" id="amount" class="form-control" placeholder="Enter amount" required />
                </div>
                <button type="submit" class="btn btn-primary">Send</button>
              </form>
            </div>
            <div class="total-wallet mt-3 float-end text-white">
              ${instituteId === 'IEHD' ? `
                <h6 style="margin-top: -130px; color: #c3cbdc;"><strong>Wallet Amount (IEHD):</strong></h6>
                <center><h4 class="text-white"><span id="totalWalletAmount">${totalWalletAmount}</span></h4></center>
              ` : ''}
              ${instituteId === 'IEHP' ? `
                <h6 style="margin-top: -130px; color: #c3cbdc;"><strong>Wallet Amount (IEHP):</strong></h6>
                <center><h4 class="text-white"><span id="totalWalletAmountP">${totalWalletAmountP}</span></h4></center>
              ` : ''}
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
  document.getElementById('modalContent').innerHTML = details;
  document.getElementById('instituteModal').style.display = 'block';

  document.getElementById('sendMoneyForm').addEventListener('submit', function (event) {
    event.preventDefault();
    const amount = document.getElementById('amount').value;
    handleSendMoneyss(instituteId, amount, student);
  });
}



function handleSendMoneyss(instituteId, amount, student) {
  fetch(`/add-to-wallet-super/${instituteId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ amount, student })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      alert('Money added successfully!');

      // Update total wallet amounts in the modal
      if (instituteId === 'IEHD') {
        document.getElementById('totalWalletAmount').textContent = data.totalWalletAmount || 0;
      } else if (instituteId === 'IEHP') {
        document.getElementById('totalWalletAmountP').textContent = data.totalWalletAmountP || 0;
      }
    } else {
      alert('Failed to add money: ' + data.message);
    }
  })
  .catch(error => {
    console.error('Error adding money:', error);
  });
}


  function closeModal() {
    document.getElementById('instituteModal').style.display = 'none';
  }
</script>


    <script>
    function fetchInstituteDetails(selectElement) {
      const instituteId = selectElement.value;
      const studentDetails = {
        studentid: selectElement.dataset.studentid,
        name: selectElement.dataset.name,
        course: selectElement.dataset.course,
        email: selectElement.dataset.email,
        mobile: selectElement.dataset.mobile,
        state: selectElement.dataset.state,
        date: selectElement.dataset.date,
        amount: selectElement.dataset.amount
      };

      if (instituteId) {
        fetch(`/find-institute/${instituteId}`)
          .then(response => response.json())
          .then(data => {
            if (data.message) {
              alert(data.message); // Handle case when no institute is found
            } else {
              // Display the details in the modal
              displayInstituteDetails(data, studentDetails);
            }
          })
          .catch(error => {
            console.error('Error fetching institute details:', error);
          });
      }
    }

    function displayInstituteDetails(institute, student) {
      const details = `
        <div class="row g-4">
          <div class="card">
            <div class="info">
              <h2 class="mb-3">${institute.institutename}</h2>
              <p><strong>Owner Name:</strong> ${institute.owner_name}</p>
              <p><strong>Email:</strong> ${institute.email}</p>
              <p><strong>Institute Place:</strong> ${institute.state}, ${institute.city}</p>
              <p><strong>Institute ID:</strong> ${institute.instituteid}</p>
              <b class="text-warning"><strong>Student ID:</strong> ${student.studentid}, Amount: ${student.amount}</b>
              <div class="photo-container ms-auto" style="border-radius: 10px;">
                <img id="profilePhoto" src="${institute.profilePhoto || '/images/anon.webp'}" class="photo-placeholder" alt="Profile Photo" />
                <div class="edit-icon" onclick="document.getElementById('fileInput').click();">
                  <i class="fa fa-edit"></i>
                </div>
              </div>
              <div class="links mt-5 mb-3">
                <form id="sendMoneyForm">
                 <div class="form-group mb-3">
  <label for="amount">Send Wallet Money:</label>
  <input type="number" id="amount" class="form-control" placeholder="Enter amount" required />
  <div class="invalid-feedback"> <!-- Placeholder for error messages -->
    <!-- Error message will be dynamically inserted here -->
  </div>
</div>

                  <button type="submit" class="btn btn-primary">Send</button>
                </form>
              </div>
              <div class="total-wallet mt-3 float-end text-white">
                <h5 style="margin-top: -130px; color: #c3cbdc;"><strong>Wallet Amount:</strong></h5>
                <center><h4 class="text-white"><span id="totalWalletAmount">${institute.totalWalletAmount || 0}</span></h4></center>
              </div>
            </div>
          </div>
        </div>
      `;
      document.getElementById('modalContent').innerHTML = details;
      document.getElementById('instituteModal').style.display = 'block';

      document.getElementById('sendMoneyForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const amount = document.getElementById('amount').value;
        handleSendMoney(institute.instituteid, amount, student);
      });
    }

  function handleSendMoney(instituteId, amount, student) {
  const institutePrefix = instituteId.substring(0, 4); // Get the first four characters

  let maxPercentage = 0;

  // Check if the institute ID starts with 'IEHP'
  if (institutePrefix === 'IEHP') {
    maxPercentage = 15;
  } else if (instituteId.startsWith('IEHAP')) {
    maxPercentage = 5;
  } else if (instituteId.startsWith('IEHA')) {
    maxPercentage = 10;
  } else if (instituteId.startsWith('IEH')) {
    maxPercentage = 5;
  } else {
    showError(`Invalid institute ID prefix. Institute ID: ${instituteId}`);
    return;
  }

  const maxAmount = (student.amount * maxPercentage) / 100;

  // Validate that the entered amount is within the allowed range
  if (amount > maxAmount) {
    showError(`The maximum amount you can send is ${maxAmount} (${maxPercentage}% of ${student.amount}).`);
    return;
  }

  // Proceed with sending the money if validation passes
  fetch(`/add-to-wallet/${instituteId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ amount, student })
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Money added successfully!');
        const totalWalletElement = document.getElementById('totalWalletAmount');
        const newTotal = parseFloat(totalWalletElement.textContent) + parseFloat(amount);
        totalWalletElement.textContent = newTotal;
      } else {
        alert('Failed to add money: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error adding money:', error);
    });
}

function showError(message) {
  const amountInput = document.getElementById('amount');
  amountInput.classList.add('is-invalid'); // Highlight input box in red
  const errorElement = document.createElement('div');
  errorElement.classList.add('invalid-feedback');
  errorElement.innerText = message;
  amountInput.parentElement.appendChild(errorElement); // Display error message below input
}


    function closeModal() {
      document.getElementById('instituteModal').style.display = 'none';
    }
  </script>
<script>
  

function findInstitute(referredBy, student) { // Pass the student details as an additional parameter
  fetch(`/find-institute/${referredBy}`)
    .then(response => response.json())
    .then(data => {
      if (data.message) {
        alert(data.message); // Handle case when no institute is found
      } else {
        // Display the details in the modal
        displayInstituteDetails(data, student); // Pass the student details to displayInstituteDetails
      }
    })
    .catch(error => {
      console.error('Error fetching institute details:', error);
    });
}

function displayInstituteDetails(institute, student) {
  const details = `
    <div class="row g-4">
      <div class="card">
        <div class="info">
          <h2 class="mb-3">${institute.institutename}</h2>
          <p><strong>Owner Name:</strong> ${institute.owner_name}</p>
          <p><strong>Email:</strong> ${institute.email}</p>
          <p><strong>Institute Place:</strong> ${institute.state}, ${institute.city}</p>
          <p><strong>Institute ID:</strong> ${institute.instituteid}</p>
   <b class="text-warning"><strong>Student ID:</strong> ${student.studentid}, Amount:${student.amount}</b>
          <div class="photo-container ms-auto" style="border-radius: 10px;">
            <img id="profilePhoto" src="${institute.profilePhoto || '/images/anon.webp'}" class="photo-placeholder" alt="Profile Photo" />
            <div class="edit-icon" onclick="document.getElementById('fileInput').click();">
              <i class="fa fa-edit"></i>
            </div>
          </div>

          <div class="links mt-5 mb-3">
            <form id="sendMoneyForm">
         <div class="form-group mb-3">
  <label for="amount">Send Wallet Money:</label>
  <input type="number" id="amount" class="form-control" placeholder="Enter amount" required />
  <div class="invalid-feedback"> <!-- Placeholder for error messages -->
    <!-- Error message will be dynamically inserted here -->
  </div>
</div>

              <button type="submit" class="btn btn-primary">Send</button>
            </form>
          </div>

     <div class="total-wallet mt-3 float-end text-white">

<h5  style="margin-top: -130px; color: #c3cbdc;"><strong>Wallet Amount:</strong></h5>
  
<center>  <h4 class="text-white"><span id="totalWalletAmount">${institute.totalWalletAmount || 0}</span></h4></center>
</div>


        </div>
      </div>
    </div>
  `;
  document.getElementById('modalContent').innerHTML = details;
  document.getElementById('instituteModal').style.display = 'block';

  document.getElementById('sendMoneyForm').addEventListener('submit', function (event) {
    event.preventDefault();
    const amount = document.getElementById('amount').value;
    handleSendMoney(institute.instituteid, amount, student);
  });
}


function handleSendMoney(instituteId, amount, student) {
  const institutePrefix = instituteId.substring(0, 4); // Get the first four characters

  let maxPercentage = 0;

  // Check if the institute ID starts with 'IEHP'
  if (institutePrefix === 'IEHP') {
    maxPercentage = 15;
  } else if (instituteId.startsWith('IEHAP')) {
    maxPercentage = 5;
  } else if (instituteId.startsWith('IEHA')) {
    maxPercentage = 10;
  } else if (instituteId.startsWith('IEH')) {
    maxPercentage = 5;
  } else {
    showError(`Invalid institute ID prefix. Institute ID: ${instituteId}`);
    return;
  }

  const maxAmount = (student.amount * maxPercentage) / 100;

  // Validate that the entered amount is within the allowed range
  if (amount > maxAmount) {
    showError(`The maximum amount you can send is ${maxAmount} (${maxPercentage}% of ${student.amount}).`);
    return;
  }

  // Proceed with sending the money if validation passes
  fetch(`/add-to-wallet/${instituteId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ amount, student })
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Money added successfully!');
        const totalWalletElement = document.getElementById('totalWalletAmount');
        const newTotal = parseFloat(totalWalletElement.textContent) + parseFloat(amount);
        totalWalletElement.textContent = newTotal;
      } else {
        alert('Failed to add money: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error adding money:', error);
    });
}

function showError(message) {
  const amountInput = document.getElementById('amount');
  amountInput.classList.add('is-invalid'); // Highlight input box in red
  const errorElement = document.createElement('div');
  errorElement.classList.add('invalid-feedback');
  errorElement.innerText = message;
  amountInput.parentElement.appendChild(errorElement); // Display error message below input
}



function closeModal() {
  document.getElementById('instituteModal').style.display = 'none';
}
</script><link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

  


<script>
  $(document).on('change', '#studyStage', function () {
    const $row = $(this).closest('tr'); // Get the closest row
    const studyStage = $(this).val();
    const clientId = $row.data('id'); // Get the client ID from the row's data-id attribute

    // Log the clientId to ensure it's correctly retrieved
    console.log("Client ID:", clientId);
    
    if (studyStage && clientId) {
      $.ajax({
        url: `/get-payment-details/${clientId}/${studyStage}`,
        method: 'GET',
        success: function (response) {
          if (response.success) {
            const paymentDetails = response.paymentDetails;

            // Update the payment steps fields with fetched data
            $row.find('#paymentStep1Dropdown').val(paymentDetails[0]?.selectedValue || '');
            $row.find('#paymentStep1Details').val(paymentDetails[0]?.details || '');
            $row.find('#paymentStep1Amount').val(paymentDetails[0]?.amount || '');
            $row.find('#paymentStep1Date').val(paymentDetails[0]?.date || '');

            $row.find('#paymentStep2Dropdown').val(paymentDetails[1]?.selectedValue || '');
            $row.find('#paymentStep2Details').val(paymentDetails[1]?.details || '');
            $row.find('#paymentStep2Amount').val(paymentDetails[1]?.amount || '');
            $row.find('#paymentStep2Date').val(paymentDetails[1]?.date || '');

            $row.find('#paymentStep3Dropdown').val(paymentDetails[2]?.selectedValue || '');
            $row.find('#paymentStep3Details').val(paymentDetails[2]?.details || '');
            $row.find('#paymentStep3Amount').val(paymentDetails[2]?.amount || '');
            $row.find('#paymentStep3Date').val(paymentDetails[2]?.date || '');
          } else {
            console.warn('No payment details found for this study stage.');
          }
        },
        error: function (err) {
          console.error('Error fetching payment details:', err);
        }
      });
    } else {
      console.error("Client ID or study stage is missing.");
    }
  });

</script>

<!-- Include SweetAlert2 for alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
$(document).on('click', '#saveChangesBtn', function(e) {
    e.preventDefault(); // Prevent default form submission

    let updatedData = [];

    // Iterate over each row
    $('#dataTable tbody tr').each(function() {
        let $row = $(this);

        // Retrieve the account ID from data-id attribute
        let accountId = $row.data('id');
        if (!accountId) {
            console.error('Account ID is missing for this row:', $row);
            return;
        }

        // Retrieve the selected study stage
        let studyStage = $row.find('#studyStage').val();
        if (!studyStage) {
            console.warn('Study Stage is not selected for this row.');
            return;
        }

        // Collect payment step details for the current row
        let paymentDetails = [
            {
                step: 'paymentStep1',
                selectedValue: $row.find('#paymentStep1Dropdown').val(),
                details: $row.find('#paymentStep1Details').val(),
                amount: $row.find('#paymentStep1Amount').val(),
                date: $row.find('#paymentStep1Date').val()
            },
            {
                step: 'paymentStep2',
                selectedValue: $row.find('#paymentStep2Dropdown').val(),
                details: $row.find('#paymentStep2Details').val(),
                amount: $row.find('#paymentStep2Amount').val(),
                date: $row.find('#paymentStep2Date').val()
            },
            {
                step: 'paymentStep3',
                selectedValue: $row.find('#paymentStep3Dropdown').val(),
                details: $row.find('#paymentStep3Details').val(),
                amount: $row.find('#paymentStep3Amount').val(),
                date: $row.find('#paymentStep3Date').val()
            }
        ];

        // Fetch the current row data if it exists, or initialize a new object
        let existingRow = updatedData.find(data => data._id === accountId);
        if (!existingRow) {
            existingRow = {
                _id: accountId,
                studyStatus: $row.find('#studyStatus').val(),
                semesterStatus: $row.find('#semesterStatus').val(),
                totalAMt: $row.find('#totalAMt').val(),
                totalAMtDate: $row.find('#totalAMtDate').val(),
                totalExpectedAMt: $row.find('#totalExpectedAMt').val(),
                totalExpectedAMtDate: $row.find('#totalExpectedAMtDate').val(),
                paymentDetails: {} // Initialize an empty object for payment details
            };
            updatedData.push(existingRow);
        }

        // Merge existing payment details for the selected study stage with the new payment details
        existingRow.paymentDetails[studyStage] = existingRow.paymentDetails[studyStage] || []; // Preserve old stage data if it exists
        existingRow.paymentDetails[studyStage] = paymentDetails; // Store new details for the current study stage
    });

    // Log updatedData array for debugging
    console.log('Updated Data:', updatedData);

    // Send data via AJAX
    $.ajax({
        url: '/update-accounts-details',
        type: 'POST',
        data: JSON.stringify(updatedData), // Send the updated data
        contentType: 'application/json',
        success: function(response) {
            alert('Changes saved successfully!');
        },
        error: function(xhr, status, error) {
            console.error("Error details:", xhr.responseText); // Log full error
            alert('Error: ' + xhr.responseJSON.message);
        }
    });
});

</script>

<!-- Include daterangepicker CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<!-- Include jQuery (required) and moment.js (for date manipulation) -->
<script src="https://cdn.jsdelivr.net/npm/moment/moment.min.js"></script>

<!-- Include daterangepicker JS -->
<script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>



<script>
$(function() {
  // Initialize date range picker
  $('#dateRangeFilter').daterangepicker({
    startDate: moment().startOf('day'),
    endDate: moment(),
    ranges: {
      'Today': [moment(), moment()],
      'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
      'Last 7 Days': [moment().subtract(6, 'days'), moment()],
      'Last 14 Days': [moment().subtract(13, 'days'), moment()],
      'Last 30 Days': [moment().subtract(29, 'days'), moment()],
      'This Week': [moment().startOf('week'), moment().endOf('week')],
      'Last Week': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
      'This Month': [moment().startOf('month'), moment().endOf('month')],
      'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().endOf('month')]
    },
    locale: {
      format: 'YYYY-MM-DD'
    }
  }, function(start, end, label) {
    clearOldSelections();  // Clear old data selection
    filterTableByDateRange(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));
    hideHideableElements(); // Hide elements with .hideable class after filtering
  });

  // Clear filters button event handler
  $('#clearFiltersBtn').on('click', function() {
    clearAllFilters();
    hideHideableElements(); // Hide elements with .hideable class
  });

  // Close button event handler to clear filters
  $('#closeBtn').on('click', function() {
    clearAllFilters();
    hideHideableElements(); // Hide elements with .hideable class
  });

  // Event listeners for the filters
  $('#universityFilter, #yearFilter').on('change', function() {
    filterTable();
    hideHideableElements(); // Hide elements with .hideable class after filtering
  });

  // Initialize DataTable with pageLength and lengthMenu
  const table = $('#dataTable').DataTable({
    pageLength: 100,
    lengthMenu: [[100, 25, 10, -1], [100, 25, 10, "All"]]
  });

  // Function to clear previous selections
  function clearOldSelections() {
    // Clear all custom filters and reset search
    $.fn.dataTable.ext.search = [];  // Clear all custom search functions
    table.search('').columns().search('').draw();  // Clear previous searches and redraw
  }

  // Clear all filters (university, year, and date range)
  function clearAllFilters() {
    $('#universityFilter').val('');  // Clear university filter
    $('#yearFilter').val('');        // Clear year filter
    $('#dateRangeFilter').val('');   // Clear date range filter
    clearOldSelections();            // Clear DataTable filters
    table.draw();                    // Redraw the table with cleared filters
  }

  // Filter table logic (global search applied across all rows)
  function filterTable() {
    var university = $('#universityFilter').val().toLowerCase();
    var selectedYear = $('#yearFilter').val();

    // Create search strings for university and year
    var universitySearch = university ? university : '';
    var yearSearch = selectedYear ? selectedYear : '';

    // Apply column-specific filters (for example: column 29 for university, column 3 for year)
    table.column(31).search(universitySearch).draw(); // Assuming column 29 is university
    table.column(3).search(yearSearch).draw(); // Assuming column 3 is date year

    hideHideableElements(); // Hide elements with .hideable class after filtering
  }

  // Filter by date range function (global filter)
  function filterTableByDateRange(startDate, endDate) {
    // Add custom date range filter
    $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
      var docDate = data[3]; // Assuming the date column is at index 3
      var formattedDocDate = formatDateToComparable(docDate);

      if (formattedDocDate >= startDate && formattedDocDate <= endDate) {
        return true;
      }
      return false;
    });
    table.draw();
  }

  // Function to hide elements with .hideable class
  function hideHideableElements() {
    $('.hideable').hide(); // Hide all elements with .hideable class
  }

  // Format date function (convert DD/MM/YYYY to YYYY-MM-DD)
  function formatDateToComparable(date) {
    if (!date) return "";
    if (date.match(/^\d{2}\/\d{2}\/\d{4}$/)) {
      var parts = date.split('/');
      return parts[2] + '-' + parts[1] + '-' + parts[0];
    }
    return date; // Assuming it's already in YYYY-MM-DD format
  }

  // Toggle columns visibility
  $('#hideFieldsButton').on('click', function() {
    const columnsToToggle = $('.toggle-column, .hideable');
    const isHidden = columnsToToggle.is(':hidden');

    if (isHidden) {
      columnsToToggle.show();
      $('#toggleIcon').removeClass('fa-eye').addClass('fa-eye-slash');
    } else {
      columnsToToggle.hide();
      $('#toggleIcon').removeClass('fa-eye-slash').addClass('fa-eye');
    }
  });

  // Initially hide columns
  $('.toggle-column, .hideable').hide();
});
</script>



 
  <!-- Additional JavaScript Libraries -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="lib/chart/chart.min.js"></script>
  <script src="lib/easing/easing.min.js"></script>
  <script src="lib/waypoints/waypoints.min.js"></script>
  <script src="lib/owlcarousel/owl.carousel.min.js"></script>
  <script src="lib/tempusdominus/js/moment.min.js"></script>
  <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
  <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

  <!-- Template Javascript -->
  <script src="js/main.js"></script>
</body>
</html>